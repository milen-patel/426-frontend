{"version":3,"sources":["components/Register.js","token.js","components/Login.js","components/PropertyOwnershipList.js","components/AccountInfoView.js","components/MapMarkerIcon.png","components/PropertyOnMap.js","components/UserOnMapIcon.png","components/UserOnMap.js","components/Map.js","components/PropertyListVisualizer.js","components/Dashboard.js","components/Leaderboard.js","App.js","reportWebVitals.js","index.js"],"names":["Register","nameFieldChanged","e","setState","nameField","target","value","emailFieldChanged","emailField","passwordFieldChanged","passField","onRegister","a","axios","method","url","headers","data","name","state","email","password","status","to","toString","this","type","onChange","onClick","React","Component","token","val","Login","onLogin","res","src","autoPlay","loop","playsInline","muted","class","placeholder","data-mdb-ripple-color","PropertyOwnershipList","props","items","processed","map","hourlyIncome","level","ownerEmailT1","onSell","_id","ownerEmailT2","ownerEmailT3","ownerEmailT4","ownerEmailT5","AccountInfoView","onUpgradeMultiplier","balance","alert","error","multiplier","onUpgrade","maxProperties","onRedirectRequest","redirect","onLeaderboardRequest","redirectLeader","propertyId","tier","id","location","user","numProperties","properties","length","window","href","created","accountCreatedDate","experience","x","parseFloat","toFixed","replace","numberWithCommas","bind","PropertyOnMap","icon","style","width","alt","onHover","$hover","UserOnMap","Map","clickedMap","walkCost","distanceInmBetweenEarthCoordinates","userLat","userLon","lat","lng","process","addy","walkLat","walkLon","address","results","formatted","find","c","hoverInfo","degreesToRadians","degrees","Math","PI","walkOffer","propertyVisuals","userBalance","moveHandler","hoverVisuals","height","marginLeft","marginRight","border","borderRadius","bootstrapURLKeys","key","language","region","center","defaultZoom","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","sqrt","PropertyListVisualizer","cost","handler","generateBuyButton","generateEntries","Dashboard","changePage","makeMove","lon","range","localProperties","propertiesToShow","makePurchase","vals","goToLeaderboard","focusHandler","prevState","sort","b","Leaderboard","redirectAccountView","redirectDashboard","people","p","App","history","useHistory","exact","path","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43af8576.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Responsible for generating register page\nclass Register extends React.Component {\n  constructor() {\n    super();\n    // Store the form information as state\n    this.state = {\n      nameField: \"\",\n      passField: \"\",\n      emailField: \"\",\n      status: \"\",\n    };\n  }\n\n  // If the user name changes, update state\n  nameFieldChanged = (e) => {\n    this.setState(() => ({\n      nameField: e.target.value,\n    }));\n  };\n\n  // If the user email changes, update state\n  emailFieldChanged = (e) => {\n    this.setState(() => ({\n      emailField: e.target.value,\n    }));\n  };\n\n  // If the user password changes, update state\n  passwordFieldChanged = (e) => {\n    this.setState(() => ({\n      passField: e.target.value,\n    }));\n  };\n\n  // Handler when the user attempts to register\n  onRegister = async () => {\n    try {\n      // Defer to backend\n      await axios({\n        method: \"post\",\n        url: \"https://backend-426.herokuapp.com/api/users/register\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        data: {\n          name: this.state.nameField,\n          email: this.state.emailField,\n          password: this.state.passField,\n        },\n      });\n\n      // If we suceed, redirect user to authentication page\n      this.setState(() => ({\n        status: <Redirect to=\"/Earth3-Frontend/login\"></Redirect>,\n      }));\n\n    } catch (err) {\n      // If we fail, show information to user\n      this.setState(() => ({ status: err.toString() }));\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.status}\n        {this.state.status ? <br /> : \"\"}\n        Name:\n        <input type=\"text\" onChange={this.nameFieldChanged}></input>\n        <br />\n        Email:\n        <input type=\"text\" onChange={this.emailFieldChanged}></input>\n        <br />\n        Password:\n        <input type=\"password\" onChange={this.passwordFieldChanged}></input>\n        <br />\n        Register:\n        <button type=\"button\" onClick={this.onRegister}>\n          Register\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","/*\n * Used to store JWT token for authentication purposes \n */\n\nlet token = {\n    val: \"\",\n};\nexport {token};\n","import axios from \"axios\";\nimport React from \"react\";\nimport { token } from \"../token\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./login.css\";\n\n// Responsible for rendering the login page\nclass Login extends React.Component {\n  constructor() {\n    super();\n    \n    // Store the current user input, at any given moment, in state\n    this.state = {\n      passField: \"\",\n      emailField: \"\",\n      status: \"\",\n    };\n  }\n\n  // If the user changes their email, update state\n  emailFieldChanged = (e) => {\n    this.setState(() => ({\n      emailField: e.target.value,\n    }));\n  };\n\n  // If the user updates their password, change state\n  passwordFieldChanged = (e) => {\n    this.setState(() => ({\n      passField: e.target.value,\n    }));\n  };\n\n  // Handler for when the user clicks the login button\n  onLogin = async () => {\n    try {\n      // Call the backend \n      let res = await axios({\n        method: \"post\",\n        url: \"https://backend-426.herokuapp.com/api/users/login\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        data: {\n          email: this.state.emailField,\n          password: this.state.passField,\n        },\n      });\n\n      // Grab the token and store it in the global variable\n      token.val = res.data.data.token;\n\n      // Update state so we redirect to the dashboard view\n      this.setState(() => ({\n        status: <Redirect to=\"/Earth3-Frontend/dashboard\"></Redirect>,\n      }));\n    } catch (err) {\n      // If there was an error authenticating, show it to the user \n      this.setState(() => ({ status: err.toString() }));\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <video\n          src=\"https://www.youtube.com/embed/_Sl8diqCAFw\"\n          autoPlay\n          loop\n          playsInline\n          muted\n        ></video>\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"card\">\n                {this.state.status}\n                {this.state.status ? <br /> : \"\"}\n                <form class=\"box\">\n                  <h1>Login</h1>\n                  <p class=\"text-muted\">\n                    {\" \"}\n                    Please enter your Email and Password!\n                  </p>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    onChange={this.emailFieldChanged}\n                  ></input>\n                  <br />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={this.passwordFieldChanged}\n                  ></input>\n                  <br />\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-success btn-rounded\"\n                    data-mdb-ripple-color=\"dark\"\n                    onClick={this.onLogin}\n                  >\n                    Login\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","// Responsible for generating the list of properties owned by the current user\nimport \"./propertyowner.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction PropertyOwnershipList(props) {\n  // If user owns no properties, stop\n  if (!props.items) {\n    return <h1>Buy Properties to Get Started...</h1>;\n  }\n\n  let processed = \"\";\n\n  processed = props.items.map((e) => {\n    return (\n      \n    <div class=\"card\" key = {e._id}>\n    <h1 class = \"ct tm\">{e.name}</h1>\n    <h7 class = \"ct\">Hourly Income: {e.hourlyIncome}</h7>\n        <h7 class = \"ct\">Base Value: {e.value}</h7>\n        <h7 class = \"ct\">Level:{e.level} </h7>\n        <h4 class = \"ct\">Owners:</h4>\n        <ul class = \"ct\">\n        \n        <li class = \"ct mg\">\n          Tier 1:  {e.ownerEmailT1 ? e.ownerEmailT1 : <em>Unowned  </em>}\n          {e.ownerEmailT1 === props.email ?(\n            \n            <button\n            type=\"button\"\n            class=\"btn btn-outline-warning btn-rounded sbtn\"\n            data-mdb-ripple-color=\"dark\"\n              onClick={() => {\n                props.onSell(props.email, e._id, 1);\n              }}\n            >\n              Sell\n            </button>\n          ) : (\n            \"\"\n          )}\n        </li>\n        <li class = \"ct mg\">\n          Tier 2: {e.ownerEmailT2 ? e.ownerEmailT2 : <em>Unowned  </em>}\n          {e.ownerEmailT2 === props.email ? (\n             <button\n             type=\"button\"\n             class=\"btn btn-outline-warning btn-rounded sbtn\"\n             data-mdb-ripple-color=\"dark\"\n              onClick={() => {\n                props.onSell(props.email, e._id, 2);\n              }}\n            >\n              Sell\n            </button>\n          ) : (\n            \"\"\n          )}\n        </li>\n        <li class = \"ct mg\">\n          Tier 3: {e.ownerEmailT3 ? e.ownerEmailT3 : <em>Unowned</em>}\n          {e.ownerEmailT3 === props.email ? (\n             <button\n             type=\"button\"\n             class=\"btn btn-outline-warning btn-rounded sbtn\"\n             data-mdb-ripple-color=\"dark\"\n              onClick={() => {\n                props.onSell(props.email, e._id, 3);\n              }}\n            >\n              Sell\n            </button>\n          ) : (\n            \"\"\n          )}\n        </li>\n        <li class = \"ct mg\">\n          Tier 4: {e.ownerEmailT4 ? e.ownerEmailT4 : <em>Unowned  </em>}\n          {e.ownerEmailT4 === props.email ? (\n             <button\n             type=\"button\"\n             class=\"btn btn-outline-warning btn-rounded sbtn\"\n             data-mdb-ripple-color=\"dark\"\n              onClick={() => {\n                props.onSell(props.email, e._id, 4);\n              }}\n            >\n              Sell\n            </button>\n          ) : (\n            \"\"\n          )}\n        </li>\n        <li class = \"ct mg\">\n          Tier 5: {e.ownerEmailT5 ? e.ownerEmailT5 : <em>Unowned  </em>}\n          {e.ownerEmailT5 === props.email ? (\n             <button\n             type=\"button\"\n             class=\"btn btn-outline-warning btn-rounded sbtn\"\n             data-mdb-ripple-color=\"dark\"\n              onClick={() => {\n                props.onSell(props.email, e._id, 5);\n              }}\n            >\n              Sell  \n            </button>\n          ) : (\n            \"\"\n          )}\n        </li>\n      </ul>\n    </div>\n    \n      /*\n      <div class = 'container' key={e._id}>\n        <hr />\n        <h1>{e.name}</h1>\n        <h5>Hourly Income: {e.hourlyIncome}</h5>\n        <h5>Base Value: {e.value}</h5>\n        <h5>Level:{e.level} </h5>\n        <h5>Owners:</h5>\n        <div class='card'>\n        <ul>\n        \n          <li>\n            Tier 1: {e.ownerEmailT1 ? e.ownerEmailT1 : <em>Unowned</em>}\n            {e.ownerEmailT1 === props.email ? (\n              <button\n              type=\"button\"\n              class=\"btn btn-outline-warning btn-rounded\"\n              data-mdb-ripple-color=\"dark\"\n                onClick={() => {\n                  props.onSell(props.email, e._id, 1);\n                }}\n              >\n                Sell\n              </button>\n            ) : (\n              \"\"\n            )}\n          </li>\n          <li>\n            Tier 2: {e.ownerEmailT2 ? e.ownerEmailT2 : <em>Unowned</em>}\n            {e.ownerEmailT2 === props.email ? (\n               <button\n               type=\"button\"\n               class=\"btn btn-outline-warning btn-rounded\"\n               data-mdb-ripple-color=\"dark\"\n                onClick={() => {\n                  props.onSell(props.email, e._id, 2);\n                }}\n              >\n                Sell\n              </button>\n            ) : (\n              \"\"\n            )}\n          </li>\n          <li>\n            Tier 3: {e.ownerEmailT3 ? e.ownerEmailT3 : <em>Unowned</em>}\n            {e.ownerEmailT3 === props.email ? (\n               <button\n               type=\"button\"\n               class=\"btn btn-outline-warning btn-rounded\"\n               data-mdb-ripple-color=\"dark\"\n                onClick={() => {\n                  props.onSell(props.email, e._id, 3);\n                }}\n              >\n                Sell\n              </button>\n            ) : (\n              \"\"\n            )}\n          </li>\n          <li>\n            Tier 4: {e.ownerEmailT4 ? e.ownerEmailT4 : <em>Unowned</em>}\n            {e.ownerEmailT4 === props.email ? (\n               <button\n               type=\"button\"\n               class=\"btn btn-outline-warning btn-rounded\"\n               data-mdb-ripple-color=\"dark\"\n                onClick={() => {\n                  props.onSell(props.email, e._id, 4);\n                }}\n              >\n                Sell\n              </button>\n            ) : (\n              \"\"\n            )}\n          </li>\n          <li>\n            Tier 5: {e.ownerEmailT5 ? e.ownerEmailT5 : <em>Unowned</em>}\n            {e.ownerEmailT5 === props.email ? (\n               <button\n               type=\"button\"\n               class=\"btn btn-outline-warning btn-rounded\"\n               data-mdb-ripple-color=\"dark\"\n                onClick={() => {\n                  props.onSell(props.email, e._id, 5);\n                }}\n              >\n                Sell\n              </button>\n            ) : (\n              \"\"\n            )}\n          </li>\n        </ul>\n        </div>\n        <hr />\n      </div>\n      */\n    );\n  });\n\n  return <div>{processed}</div>;\n}\n\nexport default PropertyOwnershipList;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { token } from \"../token\";\nimport axios from \"axios\";\nimport PropertyOwnershipList from \"./PropertyOwnershipList\";\nimport \"./accountinfoview.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Response for loading the personal account information pages\nclass AccountInfoView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      multiplier: 1.0,\n    };\n  }\n\n  // First time the component is rendered, fetch data\n  async componentDidMount() {\n    // Validate that the user has authenticated\n    if (!token.val) {\n      // Don't fetch, render will automatically redirect the user\n      return;\n    }\n\n    // Call backend for account information\n    const res = await axios({\n      method: \"get\",\n      url: \"https://backend-426.herokuapp.com/api/user/accountInformation\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // If the call fails, redirect the user\n    if (res.data.error) {\n      window.location.href = \"../login\";\n    }\n\n    // Set the state based on the result of the call\n    this.setState(() => ({\n      email: res.data.data.email,\n      name: res.data.data.name,\n      created: res.data.data.accountCreatedDate,\n      balance: res.data.data.balance,\n      multiplier: res.data.data.multiplier,\n      maxProperties: res.data.data.maxProperties,\n      experience: res.data.data.experience,\n      location: res.data.data.location,\n      numProperties: res.data.data.properties.length,\n      properties: res.data.properties,\n    }));\n  }\n\n  // Handler if the user requests to upgrade their income multiplier\n  onUpgradeMultiplier = async () => {\n    // Make sure that they have enough money\n    if (this.state.balance <= 1000000) {\n      alert(\"You don't have enough money for this transaction!\");\n      return;\n    }\n\n    // Call API for upgrading\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/user/increaseMultiplier\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // Abort if error\n    if (res.data.error) {\n      alert(\"Unable to upgrade!\");\n      return;\n    }\n\n    // Update state after API Call\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      multiplier: res.data.data.multiplier,\n    }));\n  };\n\n  // Handler for if the user requests to upgrade their property limit\n  onUpgrade = async () => {\n    // Make sure that they have enough money\n    if (this.state.balance <= this.state.maxProperties ** 3) {\n      alert(\"You don't have enough money for this transaction!\");\n      return;\n    }\n\n    // Call API for upgrading\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/user/buyLevel\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // Abort if error\n    if (res.data.error) {\n      alert(\"Unable to upgrade!\");\n      return;\n    }\n\n    // Update state after API Call\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      maxProperties: res.data.data.maxProperties,\n    }));\n  };\n\n  // Handler for if the user wants to go back to the dashboard\n  onRedirectRequest = () => {\n    // Update state so we render a <Redirect> tag\n    this.setState(() => ({\n      redirect: true,\n    }));\n  };\n\n  //Handler if the user wants to go to the leaderboard\n  onLeaderboardRequest = () => {\n    // Update state so we render a <Redirect> tag\n    this.setState(() => ({\n      redirectLeader: true,\n    }));\n  };\n\n  // Helper function for converting big integers into dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"$0\";\n    }\n    x = parseFloat(x.toFixed(2));\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  // Handler if the user requests to sell a property\n  onSell = async (email, propertyId, tier) => {\n    // Defer to backend\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/sell\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        email: email,\n        id: propertyId,\n        tier: tier,\n      },\n    });\n\n    // Update state with properties that may have changed\n    this.setState(() => ({\n      maxProperties: res.data.data.maxProperties,\n      location: res.data.data.user.location,\n      numProperties: res.data.data.user.properties.length,\n      properties: res.data.data.properties,\n    }));\n  };\n\n  render() {\n    // Validate token\n    if (!token.val) {\n      return <Redirect to=\"/Earth3-Frontend/login\"></Redirect>;\n    }\n\n    // If the user has requested to go back to the dashboard\n    if (this.state.redirect) {\n      return <Redirect to=\"/Earth3-Frontend/dashboard\"></Redirect>;\n    }\n\n    // If user wants to visit leaderboard\n    if (this.state.redirectLeader) {\n      return <Redirect to=\"/Earth3-Frontend/leaderboard\"></Redirect>;\n    }\n\n    return (\n      <div class = \"ml\">\n        \n        <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\n          data-mdb-ripple-color=\"dark\" \n          onClick={this.onRedirectRequest}>Go Back to Dashboard</button>\n         <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={this.onLeaderboardRequest}>Go to Leaderboard</button>\n        <hr />\n        <div>\n        <h1 class = \"ml\">Account Information:</h1>\n        <ul>\n          <li>\n            <strong>Email: </strong>\n            {this.state.email}\n          </li>\n          <li>\n            <strong>Name: </strong>\n            {this.state.name}\n          </li>\n          <li>\n            <strong>Account Created On: </strong>\n            {this.state.created}\n          </li>\n          <li>\n            <strong>Balance: </strong>\n            {this.numberWithCommas(this.state.balance)}\n          </li>\n          <li>\n            <strong>Maximum Properties: </strong>\n            {this.state.maxProperties}\n          </li>\n          <li>\n            <strong>Total Earnings: </strong>\n            {this.numberWithCommas(this.state.experience)}\n          </li>\n          <li>\n            <strong>Multiplier: </strong>\n            {this.state.multiplier.toFixed(2)}\n          </li>\n          <li>\n            <strong>Latitude: </strong>\n            {this.state.location ? this.state.location[0] : \"\"}\n          </li>\n          <li>\n            <strong>Longitude: </strong>\n            {this.state.location ? this.state.location[1] : \"\"}\n          </li>\n          <li>\n            <strong>Number of Properties: </strong>\n            {this.state.numProperties}\n          </li>\n        </ul>\n        <hr />\n        <h1 class = \"ml\">Upgrades</h1>\n        <p class = \"ml\">\n          You can currently own up to {this.state.maxProperties} properties and\n          you currently own {this.state.numProperties}. You can upgrade to{\" \"}\n          {2 * this.state.maxProperties} slots for{\" \"}\n          {this.numberWithCommas(this.state.maxProperties ** 3)}\n        </p>\n        {this.state.balance >= this.state.maxProperties ** 3 ? (\n          <button\n          type=\"button\"\n          class=\"btn btn-outline-success btn-rounded ml ms mbuttons\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={this.onUpgrade}>Upgrade</button>\n        ) : (\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-danger btn-rounded ml ms mbuttons\"\n            data-mdb-ripple-color=\"dark\">Not Enough funds!</button>\n        )}\n        <p class = \"ml\">\n          Your income multiplier is currently {this.state.multiplier.toFixed(2)}\n          . You can upgrade to {(this.state.multiplier + 0.01).toFixed(2)} for\n          $1,000,000\n        </p>\n        {this.state.balance >= 1000000 ? (\n          <button\n          type=\"button\"\n          class=\"btn btn-outline-success btn-rounded ml ms mbuttons\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={this.onUpgradeMultiplier}>Upgrade</button>\n        ) : (\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-danger btn-rounded ml ms mbuttons\"\n            data-mdb-ripple-color=\"dark\">Not Enough Funds!</button>\n        )}\n        <hr />\n        </div>\n        <h1 class = \"ml\">Your Properties:</h1>\n        <div class = \"wrapper\">\n\n        <PropertyOwnershipList\n          items={this.state.properties}\n          email={this.state.email}\n          onSell={this.onSell.bind(this)}\n        />\n        \n        \n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default AccountInfoView;\n","export default __webpack_public_path__ + \"static/media/MapMarkerIcon.fb4229c5.png\";","import icon from \"./MapMarkerIcon.png\";\n\n// Responsible for showing an individual property on the map\nlet PropertyOnMap = (props) => {\n  return (\n    <div key={props.name}>\n      <img\n        src={icon}\n        style={{ width: \"25px\" }}\n        alt={\"Property visualized on the map\"}\n        onClick={() => {\n          props.onHover(props.location);\n        }}\n      />\n      {props.$hover ? props.name : \"\"}\n    </div>\n  );\n};\n\nexport default PropertyOnMap;\n","export default __webpack_public_path__ + \"static/media/UserOnMapIcon.3e0031bf.png\";","import icon from \"./UserOnMapIcon.png\";\n\n// Responsible for showing the user on the map\nfunction UserOnMap(props) {\n  return (\n    <div>\n      <img\n        src={icon}\n        style={{ width: \"30px\" }}\n        alt={\"User visualized on the map.\"}\n      />\n    </div>\n  );\n}\n\nexport default UserOnMap;\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport PropertyOnMap from \"./PropertyOnMap\";\nimport UserOnMap from \"./UserOnMap\";\nimport \"./map.css\"\nimport axios from \"axios\";\n\n// Responsible for showing the map on the dashboard visualizing properties that are near the user\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    // Store state for indicating if the user wants to move elsewhere on the map\n    this.state = {\n      walkLat: this.props.userLat,\n      walkLon: this.props.userLon,\n      walkCost: 0,\n    };\n  }\n\n  // If the user clicks on the map, update state\n  clickedMap = async (e) => {\n    // Compute the cost to move to the target position\n    const walkCost = this.distanceInmBetweenEarthCoordinates(\n      this.props.userLat,\n      this.props.userLon,\n      e.lat,\n      e.lng\n    );\n\n    // Get address\n    const addy = await axios(`https://api.opencagedata.com/geocode/v1/json?key=${process.env.REACT_APP_REVERSE_API_KEY}&pretty=1&q=${e.lat}%2C${e.lng}`)\n\n    // Update state accordingly\n    this.setState(() => ({\n      walkLat: e.lat,\n      walkLon: e.lng,\n      walkCost: walkCost.toFixed(2),\n      address: addy.data.results[0].formatted,\n    }));\n  };\n\n  onHover = (e) => {\n    // Take the location and find the correct property\n    const target = this.props.properties.find((c) => {\n      return c.location[0] === e[0] && c.location[1] === e[1];\n    });\n\n    //Update state\n    this.setState(() => ({\n      hoverInfo: target,\n    }));\n  };\n\n  render() {\n    let walkOffer;\n    walkOffer = (\n      <div>\n        <hr />\n        <strong class = \"ll\">Latitude: {this.state.walkLat}</strong>\n        <strong class = \"ll\">Longitude: \n        {this.state.walkLon}\n        {this.state.address ? <p>Address: {this.state.address}</p> : \"\"}\n        </strong>\n        <br />\n        <strong class = \"ll\">Cost: ${this.state.walkCost}</strong>\n        <br />\n        {this.props.userBalance > this.state.walkCost ? (\n           <button\n           type=\"button\"\n           class=\"btn btn-outline-success btn-rounded mbtn\"\n           data-mdb-ripple-color=\"dark\"\n            onClick={async () => {\n              // Only call API if they are moving to a new location\n              if (this.state.walkCost === 0) {\n                return;\n              }\n\n              if (\n                await this.props.moveHandler(\n                  this.state.walkLat,\n                  this.state.walkLon\n                )\n              ) {\n                // Now it costs no money to move where we are\n                this.setState(() => ({ walkCost: 0 }));\n              }\n            }}\n          >\n            Move\n          </button>\n        ) : (\n          <button\n          type=\"button\"\n          class=\"btn btn-outline-danger btn-rounded mbtn\"\n          data-mdb-ripple-color=\"dark\">Insufficient Funds</button>\n        )}\n        <hr />\n      </div>\n    );\n\n    let propertyVisuals;\n    if (this.props.properties) {\n      propertyVisuals = this.props.properties.map((e) => (\n        <PropertyOnMap\n          location={e.location}\n          name={e.name}\n          lat={e.location[0]}\n          lng={e.location[1]}\n          key={e.location[0] + \"\" + e.location[1]}\n          onHover={this.onHover}\n        />\n      ));\n    }\n\n    let hoverVisuals = \"Click a property for more details\";\n    if (this.state.hoverInfo) {\n      //hoverVisuals = (<div>\n      //<PropertyListVisualizer items={[this.state.hoverInfo]} handler={this.props.focusHandler} />\n      //</div>);\n      hoverVisuals = (\n        <div>\n          <h5>Name: {this.state.hoverInfo.name}</h5>\n          <h5>Value: {this.state.hoverInfo.value}</h5>\n          <h5>Income: {this.state.hoverInfo.hourlyIncome}</h5>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {walkOffer}\n        {hoverVisuals}\n        \n        <div style={{ width: \"500px\", height: \"500px\", marginLeft: \"auto\", marginRight: \"auto\", border: \"15px solid green\", borderRadius: \"15px\" }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n              language: \"en\",\n              region: \"US\",\n            }}\n            center={{ lat: this.props.userLat, lng: this.props.userLon }}\n            defaultZoom={15}\n            onClick={this.clickedMap}\n          >\n            {propertyVisuals}\n            <UserOnMap\n              lat={this.props.userLat}\n              lng={this.props.userLon}\n              name={\"Me\"}\n            />\n          </GoogleMapReact>\n        </div>\n        \n      </div>\n    );\n  }\n\n  degreesToRadians = (degrees) => {\n    return (degrees * Math.PI) / 180;\n  };\n\n  distanceInmBetweenEarthCoordinates(lat1, lon1, lat2, lon2) {\n    var earthRadiusKm = 6371;\n\n    var dLat = this.degreesToRadians(lat2 - lat1);\n    var dLon = this.degreesToRadians(lon2 - lon1);\n\n    lat1 = this.degreesToRadians(lat1);\n    lat2 = this.degreesToRadians(lat2);\n\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return 1000 * earthRadiusKm * c;\n  }\n}\n\nexport default Map;\n","import React from \"react\";\nimport \"./propertylistvisualizer.css\"\n// Responsible for showing the user a list of nearby properties\nclass PropertyListVisualizer extends React.Component {\n  // Helper function for showing purchase buttons under each property tier\n  generateBuyButton(id, tier, cost) {\n    // Ensure that the user has sufficient funds\n    if (cost > this.props.balance) {\n      return <button\n      type=\"button\"\n      class=\"btn btn-outline-danger btn-rounded nebtn\"\n      data-mdb-ripple-color=\"dark\">Not enough $$$</button>;\n    }\n\n    return (\n      <button\n      type=\"button\"\n      class=\"btn btn-outline-success btn-rounded pbtn\"\n      data-mdb-ripple-color=\"dark\"\n        onClick={() => {\n          this.props.handler(id, tier);\n        }}\n      >\n        Purchase for {`${this.numberWithCommas(cost)}`}\n      </button>\n    );\n  }\n\n  // Hepler for parsing numbers into a dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"\";\n    }\n    x = parseFloat(x.toFixed(2));\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  // Function for generating the entire list to show \n  generateEntries() {\n    // If we have no properties, or the component just loaded...\n    if (!this.props.items || this.props.items.length === 0) {\n      return (\n        <div>\n          <h1>No nearby properties found...</h1>\n        </div>\n      );\n    }\n\n    return this.props.items.map((e) => {\n      return (\n        <div class = \"card ct\" key={e._id}>\n          <h1 class = \"tm\">{e.name}</h1>\n          <h5>Hourly Income: {e.hourlyIncome}</h5>\n          <h5>Base Value: {e.value}</h5>\n          <h5>Level:{e.level} </h5>\n          <h5>Owners:</h5>\n          <ul>\n            <li>\n              Tier 1:{\" \"}\n              {e.ownerEmailT1\n                ? e.ownerEmailT1\n                : this.generateBuyButton(e._id, 1, e.value ** 1)}\n            </li>\n            <li>\n              Tier 2:{\" \"}\n              {e.ownerEmailT2\n                ? e.ownerEmailT2\n                : this.generateBuyButton(e._id, 2, e.value ** 2)}\n            </li>\n            <li>\n              Tier 3:{\" \"}\n              {e.ownerEmailT3\n                ? e.ownerEmailT3\n                : this.generateBuyButton(e._id, 3, e.value ** 3)}\n            </li>\n            <li>\n              Tier 4:{\" \"}\n              {e.ownerEmailT4\n                ? e.ownerEmailT4\n                : this.generateBuyButton(e._id, 4, e.value ** 4)}\n            </li>\n            <li>\n              Tier 5:{\" \"}\n              {e.ownerEmailT5\n                ? e.ownerEmailT5\n                : this.generateBuyButton(e._id, 5, e.value ** 5)}\n            </li>\n          </ul>\n          \n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div>{this.generateEntries()}</div>;\n  }\n}\n\nexport default PropertyListVisualizer;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { token } from \"../token\";\nimport Map from \"./Map\";\nimport PropertyListVisualizer from \"./PropertyListVisualizer\";\nimport \"./dashboard.css\"\n\n// Responsible for rendering the dashboard shown to the user after authentication\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  // When the component first loads, fetch information\n  async componentDidMount() {\n    if (!token.val) {\n      return;\n    }\n\n    // Call the backend to get user account information\n    const res = await axios({\n      method: \"get\",\n      url: \"https://backend-426.herokuapp.com/api/user/accountInformation\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // If the call fails, redirect user to authenticate\n    if (res.data.error) {\n      window.location.href = \"../login\";\n    }\n\n    // Call backend to find properties to show on the map\n    const localProperties = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: res.data.data.location[0],\n        lon: res.data.data.location[1],\n        range: 500,\n      },\n    });\n\n    // If the call fails, redirect user to authenticate\n    if (res.data.error) {\n      window.location.href = \"../login\";\n    }\n\n    // Store both results in state\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      lat: res.data.data.location[0],\n      lon: res.data.data.location[1],\n      propertiesToShow: localProperties.data,\n    }));\n  }\n\n  // If the user requests to go to the account view page\n  changePage = () => {\n    // Update state so we render a Redirect tag\n    this.setState(() => ({\n      redirect: <Redirect to=\"/Earth3-Frontend/personal\"></Redirect>,\n    }));\n  };\n\n  // If the user requests to make a move on the map\n  makeMove = async (walkLat, walkLon) => {\n    // Immediately call backend\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/user/move\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: walkLat,\n        lon: walkLon,\n      },\n    });\n\n    // Get the new properties that are nearby the user\n    const localProperties = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: walkLat,\n        lon: walkLon,\n        range: 500,\n      },\n    });\n\n    // Update state accordingly\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      lat: res.data.data.lat,\n      lon: res.data.data.lon,\n      propertiesToShow: localProperties.data,\n    }));\n\n    // Inform the walk offer component that the move succeeded\n    return true;\n  };\n\n  // Handler if the user requests to buy a certain tier of a property\n  makePurchase = async (id, tier) => {\n    // Defer to backend\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/buy\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        propertyId: id,\n        tier: tier,\n      },\n    });\n\n    // Refresh property information\n    const localProperties = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: this.state.lat,\n        lon: this.state.lon,\n        range: 500,\n      },\n    });\n\n    // Handle results and possible error\n    if (res.data.error) {\n      this.setState(() => ({\n        propertiesToShow: localProperties.data,\n      }));\n    } else {\n      this.setState(() => ({\n        balance: res.data.data.user.balance,\n        propertiesToShow: localProperties.data,\n      }));\n    }\n  };\n\n  // Helper for turning big int into dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"\";\n    }\n    x = parseFloat(x.toFixed(2));\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    // Validate token\n    if (!token.val) {\n      return <Redirect to=\"/Earth3-Frontend/login\"></Redirect>;\n    }\n\n    let vals = this.state.propertiesToShow;\n\n    return (\n      <div>\n        <h1 class = \"ll cn\">A game by Casey S. and Milen P.</h1>\n        {this.state.redirect}\n        {this.state.goToLeaderboard}\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n          data-mdb-ripple-color=\"dark\" \n          onClick={this.changePage}>Go to Account View</button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={() => {\n            this.setState(() => ({\n              goToLeaderboard: (\n                <Redirect to=\"/Earth3-Frontend/leaderboard\"></Redirect>\n              ),\n            }));\n          }}\n        >\n          Go to Leaderboard\n        </button>\n        <hr />\n        <p class = \"cn\">\n          <strong class = \"ll cn\">Balance:  {this.numberWithCommas(this.state.balance)}\n          </strong>\n        </p>\n        <div class = \"map ct\">\n        <Map \n          userLat={this.state.lat}\n          userLon={this.state.lon}\n          properties={this.state.propertiesToShow}\n          userBalance={this.state.balance}\n          moveHandler={this.makeMove.bind(this)}\n          focusHandler={this.makePurchase.bind(this)}\n        />\n        </div>\n        <div>\n          <hr />\n          <h3 class = \"ct\">\n            {this.state.propertiesToShow\n              ? `Showing ${this.state.propertiesToShow.length} properties`\n              : \"Showing no properties\"}\n          </h3>\n          <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton \"\n          data-mdb-ripple-color=\"dark\" \n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.value > b.value ? 1 : -1;\n                }),\n              }));\n            }}\n          >\n            Sort by Value Ascending\n          </button>\n          <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n          data-mdb-ripple-color=\"dark\" \n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.value > b.value ? -1 : 1;\n                }),\n              }));\n            }}\n          >\n            Sort by Value Descending\n          </button>\n          <br />\n          <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n          data-mdb-ripple-color=\"dark\" \n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.hourlyIncome > b.hourlyIncome ? 1 : -1;\n                }),\n              }));\n            }}\n          >\n            Sort by Income Ascending\n          </button>\n          <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n          data-mdb-ripple-color=\"dark\" \n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.hourlyIncome > b.hourlyIncome ? -1 : 1;\n                }),\n              }));\n            }}\n          >\n            Sort by Income Descending\n          </button>\n          <br />\n          <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n          data-mdb-ripple-color=\"dark\" \n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.level > b.level ? 1 : -1;\n                }),\n              }));\n            }}\n          >\n            Sort by Level Ascending\n          </button>\n          <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n          data-mdb-ripple-color=\"dark\" \n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.level > b.level ? -1 : 1;\n                }),\n              }));\n            }}\n          >\n            Sort by Level Descending\n          </button>\n          \n          <PropertyListVisualizer\n            items={vals}\n            balance={this.state.balance}\n            handler={this.makePurchase.bind(this)}\n            key={this.state.propertiesToShow}\n            id={vals}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import axios from \"axios\";\nimport React from \"react\";\nimport { token } from \"../token\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./leaderboard.css\"\n\n// Responsible for showing the leaderboard of the top 10 players, ranked by lifetime earnings\nclass Leaderboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // State for handling redirect requests\n    this.state = {\n      redirectAccountView: false,\n      redirectDashboard: false,\n    };\n  }\n\n  // Helper for turning big int into dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"\";\n    }\n    x = parseFloat(x.toFixed(2));\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  // When the component is first loaded, get the leaderboard information\n  async componentDidMount() {\n    // Make sure we have a valid token\n    if (!token.val) {\n      return;\n    }\n\n    // Call the backend to get user account information\n    const res = await axios({\n      method: \"get\",\n      url: \"https://backend-426.herokuapp.com/api/user/leaderboard\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // If there was an error, inform the user and abort\n    if (res.data.error) {\n      alert(\"Unable to access leaderboard\");\n      return;\n    }\n\n    // If we succeed, store data in state\n    this.setState(() => ({\n      people: res.data.data,\n    }));\n  }\n\n  render() {\n    // Handle the case where the user clicks the account view button\n    if (this.state.redirectAccountView) {\n      return <Redirect to=\"/Earth3-Frontend/personal\"></Redirect>;\n    }\n\n    // Handle the case where the user clicks the dashboard view button\n    if (this.state.redirectDashboard) {\n      return <Redirect to=\"/Earth3-Frontend/dashboard\"></Redirect>;\n    }\n\n    return (\n      <div class = \"pad\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\n          data-mdb-ripple-color=\"dark\" \n          onClick={() => {\n            this.setState(() => ({ redirectDashboard: true }));\n          }}\n        >\n          Dashboard\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\n          data-mdb-ripple-color=\"dark\" \n          onClick={() => {\n            this.setState(() => ({ redirectAccountView: true }));\n          }}\n        >\n          Account View\n        </button>\n        <hr />\n        <h1 class = \"ct\">Leaderboard</h1>\n        <ol>\n          {this.state.people\n            ? this.state.people.map((p) => {\n                return (\n                  <div class = 'card c2'>\n                  <li class = \"ct hc\" key={p.name + p.experience}>\n                      <h3 class = \"hc\">{p.name}</h3>\n                      <br />\n                      <strong>Properties Owned:</strong> {p.numProperties}\n                      <br />\n                      <strong>Lifetime Earnings:</strong>{\" \"}\n                      {this.numberWithCommas(p.experience)}\n                      \n                  </li>\n                  </div>\n                );\n              })\n            : \"No Players Found in Database...\"}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default Leaderboard;\n","// React Imports\nimport React from \"react\"; \nimport { Route, Switch } from \"react-router-dom\";\n\n// Component Imports\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport AccountInfoView from \"./components/AccountInfoView\";\nimport Dashboard from \"./components/Dashboard\";\nimport Leaderboard from \"./components/Leaderboard\";\nimport { useHistory } from \"react-router\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./app.css\";\n//import Jumbotron from 'react-bootstrap/Jumbotron'\n\n\nfunction App() {\n  // Hook for changing browser destination\n  let history = useHistory();\n\n    return (\n      <Switch>\n        <Route exact path=\"/Earth3-Frontend/\">\n          <div class = 'container'>\n            <div class ='row-md-6'>\n              <div class ='col-md-6'>\n                <div class = 'card'>\n                  <form>\n                    <h1 class=\"display-3\">Welcome to the Game</h1>\n                    <button  onClick={() => {\n                      history.push(\"/Earth3-Frontend/login\")\n                    }}>Move to Login</button>\n                    <button  onClick={() => {\n                      history.push(\"/Earth3-Frontend/register\")\n                    }}>Move to Register</button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/Earth3-Frontend/login\">\n          <Login />\n        </Route>\n        <Route path=\"/Earth3-Frontend/register\">\n          <Register />\n        </Route>\n        <Route path=\"/Earth3-Frontend/personal\">\n          <AccountInfoView />\n        </Route>\n        <Route path=\"/Earth3-Frontend/dashboard\">\n          <Dashboard />\n        </Route>\n        <Route path=\"/Earth3-Frontend/leaderboard\">\n          <Leaderboard />\n        </Route>\n      </Switch>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
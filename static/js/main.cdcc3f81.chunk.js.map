{"version":3,"sources":["components/Register.js","token.js","components/Login.js","components/PropertyOwnershipList.js","components/AccountInfoView.js","components/MapMarkerIcon.png","components/PropertyOnMap.js","components/UserOnMapIcon.png","components/UserOnMap.js","components/Map.js","components/PropertyListVisualizer.js","components/Dashboard.js","components/Leaderboard.js","App.js","reportWebVitals.js","index.js"],"names":["Register","nameFieldChanged","e","setState","nameField","target","value","emailFieldChanged","emailField","passwordFieldChanged","passField","onRegister","a","axios","method","url","headers","data","name","state","email","password","status","to","toString","this","type","onChange","onClick","React","Component","token","val","Login","onLogin","res","src","autoPlay","loop","playsInline","muted","class","placeholder","data-mdb-ripple-color","PropertyOwnershipList","props","items","processed","map","hourlyIncome","level","ownerEmailT1","onSell","_id","ownerEmailT2","ownerEmailT3","ownerEmailT4","ownerEmailT5","AccountInfoView","onUpgradeMultiplier","balance","alert","error","multiplier","onUpgrade","maxProperties","onRedirectRequest","redirect","onLeaderboardRequest","redirectLeader","propertyId","tier","id","location","user","numProperties","properties","length","window","href","created","accountCreatedDate","experience","x","parseFloat","toFixed","replace","numberWithCommas","bind","PropertyOnMap","icon","style","width","alt","onHover","$hover","UserOnMap","Map","clickedMap","walkCost","distanceInmBetweenEarthCoordinates","userLat","userLon","lat","lng","walkLat","walkLon","find","c","hoverInfo","degreesToRadians","degrees","Math","PI","walkOffer","propertyVisuals","userBalance","moveHandler","hoverVisuals","height","marginLeft","border","borderRadius","bootstrapURLKeys","key","process","language","region","center","defaultZoom","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","sqrt","PropertyListVisualizer","cost","handler","generateBuyButton","generateEntries","Dashboard","changePage","makeMove","lon","range","localProperties","propertiesToShow","makePurchase","vals","goToLeaderboard","focusHandler","prevState","sort","b","Leaderboard","redirectAccountView","redirectDashboard","people","p","App","history","useHistory","exact","path","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdcc3f81.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Responsible for generating register page\r\nclass Register extends React.Component {\r\n  constructor() {\r\n    super();\r\n    // Store the form information as state\r\n    this.state = {\r\n      nameField: \"\",\r\n      passField: \"\",\r\n      emailField: \"\",\r\n      status: \"\",\r\n    };\r\n  }\r\n\r\n  // If the user name changes, update state\r\n  nameFieldChanged = (e) => {\r\n    this.setState(() => ({\r\n      nameField: e.target.value,\r\n    }));\r\n  };\r\n\r\n  // If the user email changes, update state\r\n  emailFieldChanged = (e) => {\r\n    this.setState(() => ({\r\n      emailField: e.target.value,\r\n    }));\r\n  };\r\n\r\n  // If the user password changes, update state\r\n  passwordFieldChanged = (e) => {\r\n    this.setState(() => ({\r\n      passField: e.target.value,\r\n    }));\r\n  };\r\n\r\n  // Handler when the user attempts to register\r\n  onRegister = async () => {\r\n    try {\r\n      // Defer to backend\r\n      await axios({\r\n        method: \"post\",\r\n        url: \"https://backend-426.herokuapp.com/api/users/register\",\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        data: {\r\n          name: this.state.nameField,\r\n          email: this.state.emailField,\r\n          password: this.state.passField,\r\n        },\r\n      });\r\n\r\n      // If we suceed, redirect user to authentication page\r\n      this.setState(() => ({\r\n        status: <Redirect to=\"/426-frontend/login\"></Redirect>,\r\n      }));\r\n\r\n    } catch (err) {\r\n      // If we fail, show information to user\r\n      this.setState(() => ({ status: err.toString() }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.status}\r\n        {this.state.status ? <br /> : \"\"}\r\n        Name:\r\n        <input type=\"text\" onChange={this.nameFieldChanged}></input>\r\n        <br />\r\n        Email:\r\n        <input type=\"text\" onChange={this.emailFieldChanged}></input>\r\n        <br />\r\n        Password:\r\n        <input type=\"password\" onChange={this.passwordFieldChanged}></input>\r\n        <br />\r\n        Register:\r\n        <button type=\"button\" onClick={this.onRegister}>\r\n          Register\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","/*\r\n * Used to store JWT token for authentication purposes \r\n */\r\n\r\nlet token = {\r\n    val: \"\",\r\n};\r\nexport {token};\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { token } from \"../token\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./login.css\";\r\n\r\n// Responsible for rendering the login page\r\nclass Login extends React.Component {\r\n  constructor() {\r\n    super();\r\n    \r\n    // Store the current user input, at any given moment, in state\r\n    this.state = {\r\n      passField: \"\",\r\n      emailField: \"\",\r\n      status: \"\",\r\n    };\r\n  }\r\n\r\n  // If the user changes their email, update state\r\n  emailFieldChanged = (e) => {\r\n    this.setState(() => ({\r\n      emailField: e.target.value,\r\n    }));\r\n  };\r\n\r\n  // If the user updates their password, change state\r\n  passwordFieldChanged = (e) => {\r\n    this.setState(() => ({\r\n      passField: e.target.value,\r\n    }));\r\n  };\r\n\r\n  // Handler for when the user clicks the login button\r\n  onLogin = async () => {\r\n    try {\r\n      // Call the backend \r\n      let res = await axios({\r\n        method: \"post\",\r\n        url: \"https://backend-426.herokuapp.com/api/users/login\",\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        data: {\r\n          email: this.state.emailField,\r\n          password: this.state.passField,\r\n        },\r\n      });\r\n\r\n      // Grab the token and store it in the global variable\r\n      token.val = res.data.data.token;\r\n\r\n      // Update state so we redirect to the dashboard view\r\n      this.setState(() => ({\r\n        status: <Redirect to=\"/426-frontend/dashboard\"></Redirect>,\r\n      }));\r\n    } catch (err) {\r\n      // If there was an error authenticating, show it to the user \r\n      this.setState(() => ({ status: err.toString() }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <video\r\n          src=\"https://www.youtube.com/embed/_Sl8diqCAFw\"\r\n          autoPlay\r\n          loop\r\n          playsInline\r\n          muted\r\n        ></video>\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"card\">\r\n                {this.state.status}\r\n                {this.state.status ? <br /> : \"\"}\r\n                <form class=\"box\">\r\n                  <h1>Login</h1>\r\n                  <p class=\"text-muted\">\r\n                    {\" \"}\r\n                    Please enter your Email and Password!\r\n                  </p>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    onChange={this.emailFieldChanged}\r\n                  ></input>\r\n                  <br />\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={this.passwordFieldChanged}\r\n                  ></input>\r\n                  <br />\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-success btn-rounded\"\r\n                    data-mdb-ripple-color=\"dark\"\r\n                    onClick={this.onLogin}\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","// Responsible for generating the list of properties owned by the current user\r\nimport \"./propertyowner.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction PropertyOwnershipList(props) {\r\n  // If user owns no properties, stop\r\n  if (!props.items) {\r\n    return <h1>Buy Properties to Get Started...</h1>;\r\n  }\r\n\r\n  let processed = \"\";\r\n\r\n  processed = props.items.map((e) => {\r\n    return (\r\n      \r\n    <div class=\"card\" key = {e._id}>\r\n    <h1 class = \"ct tm\">{e.name}</h1>\r\n    <h7 class = \"ct\">Hourly Income: {e.hourlyIncome}</h7>\r\n        <h7 class = \"ct\">Base Value: {e.value}</h7>\r\n        <h7 class = \"ct\">Level:{e.level} </h7>\r\n        <h4 class = \"ct\">Owners:</h4>\r\n        <ul class = \"ct\">\r\n        \r\n        <li class = \"ct mg\">\r\n          Tier 1:  {e.ownerEmailT1 ? e.ownerEmailT1 : <em>Unowned  </em>}\r\n          {e.ownerEmailT1 === props.email ?(\r\n            \r\n            <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-warning btn-rounded sbtn\"\r\n            data-mdb-ripple-color=\"dark\"\r\n              onClick={() => {\r\n                props.onSell(props.email, e._id, 1);\r\n              }}\r\n            >\r\n              Sell\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </li>\r\n        <li class = \"ct mg\">\r\n          Tier 2: {e.ownerEmailT2 ? e.ownerEmailT2 : <em>Unowned  </em>}\r\n          {e.ownerEmailT2 === props.email ? (\r\n             <button\r\n             type=\"button\"\r\n             class=\"btn btn-outline-warning btn-rounded sbtn\"\r\n             data-mdb-ripple-color=\"dark\"\r\n              onClick={() => {\r\n                props.onSell(props.email, e._id, 2);\r\n              }}\r\n            >\r\n              Sell\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </li>\r\n        <li class = \"ct mg\">\r\n          Tier 3: {e.ownerEmailT3 ? e.ownerEmailT3 : <em>Unowned</em>}\r\n          {e.ownerEmailT3 === props.email ? (\r\n             <button\r\n             type=\"button\"\r\n             class=\"btn btn-outline-warning btn-rounded sbtn\"\r\n             data-mdb-ripple-color=\"dark\"\r\n              onClick={() => {\r\n                props.onSell(props.email, e._id, 3);\r\n              }}\r\n            >\r\n              Sell\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </li>\r\n        <li class = \"ct mg\">\r\n          Tier 4: {e.ownerEmailT4 ? e.ownerEmailT4 : <em>Unowned  </em>}\r\n          {e.ownerEmailT4 === props.email ? (\r\n             <button\r\n             type=\"button\"\r\n             class=\"btn btn-outline-warning btn-rounded sbtn\"\r\n             data-mdb-ripple-color=\"dark\"\r\n              onClick={() => {\r\n                props.onSell(props.email, e._id, 4);\r\n              }}\r\n            >\r\n              Sell\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </li>\r\n        <li class = \"ct mg\">\r\n          Tier 5: {e.ownerEmailT5 ? e.ownerEmailT5 : <em>Unowned  </em>}\r\n          {e.ownerEmailT5 === props.email ? (\r\n             <button\r\n             type=\"button\"\r\n             class=\"btn btn-outline-warning btn-rounded sbtn\"\r\n             data-mdb-ripple-color=\"dark\"\r\n              onClick={() => {\r\n                props.onSell(props.email, e._id, 5);\r\n              }}\r\n            >\r\n              Sell  \r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    \r\n      /*\r\n      <div class = 'container' key={e._id}>\r\n        <hr />\r\n        <h1>{e.name}</h1>\r\n        <h5>Hourly Income: {e.hourlyIncome}</h5>\r\n        <h5>Base Value: {e.value}</h5>\r\n        <h5>Level:{e.level} </h5>\r\n        <h5>Owners:</h5>\r\n        <div class='card'>\r\n        <ul>\r\n        \r\n          <li>\r\n            Tier 1: {e.ownerEmailT1 ? e.ownerEmailT1 : <em>Unowned</em>}\r\n            {e.ownerEmailT1 === props.email ? (\r\n              <button\r\n              type=\"button\"\r\n              class=\"btn btn-outline-warning btn-rounded\"\r\n              data-mdb-ripple-color=\"dark\"\r\n                onClick={() => {\r\n                  props.onSell(props.email, e._id, 1);\r\n                }}\r\n              >\r\n                Sell\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </li>\r\n          <li>\r\n            Tier 2: {e.ownerEmailT2 ? e.ownerEmailT2 : <em>Unowned</em>}\r\n            {e.ownerEmailT2 === props.email ? (\r\n               <button\r\n               type=\"button\"\r\n               class=\"btn btn-outline-warning btn-rounded\"\r\n               data-mdb-ripple-color=\"dark\"\r\n                onClick={() => {\r\n                  props.onSell(props.email, e._id, 2);\r\n                }}\r\n              >\r\n                Sell\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </li>\r\n          <li>\r\n            Tier 3: {e.ownerEmailT3 ? e.ownerEmailT3 : <em>Unowned</em>}\r\n            {e.ownerEmailT3 === props.email ? (\r\n               <button\r\n               type=\"button\"\r\n               class=\"btn btn-outline-warning btn-rounded\"\r\n               data-mdb-ripple-color=\"dark\"\r\n                onClick={() => {\r\n                  props.onSell(props.email, e._id, 3);\r\n                }}\r\n              >\r\n                Sell\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </li>\r\n          <li>\r\n            Tier 4: {e.ownerEmailT4 ? e.ownerEmailT4 : <em>Unowned</em>}\r\n            {e.ownerEmailT4 === props.email ? (\r\n               <button\r\n               type=\"button\"\r\n               class=\"btn btn-outline-warning btn-rounded\"\r\n               data-mdb-ripple-color=\"dark\"\r\n                onClick={() => {\r\n                  props.onSell(props.email, e._id, 4);\r\n                }}\r\n              >\r\n                Sell\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </li>\r\n          <li>\r\n            Tier 5: {e.ownerEmailT5 ? e.ownerEmailT5 : <em>Unowned</em>}\r\n            {e.ownerEmailT5 === props.email ? (\r\n               <button\r\n               type=\"button\"\r\n               class=\"btn btn-outline-warning btn-rounded\"\r\n               data-mdb-ripple-color=\"dark\"\r\n                onClick={() => {\r\n                  props.onSell(props.email, e._id, 5);\r\n                }}\r\n              >\r\n                Sell\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </li>\r\n        </ul>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n      */\r\n    );\r\n  });\r\n\r\n  return <div>{processed}</div>;\r\n}\r\n\r\nexport default PropertyOwnershipList;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { token } from \"../token\";\r\nimport axios from \"axios\";\r\nimport PropertyOwnershipList from \"./PropertyOwnershipList\";\r\nimport \"./accountinfoview.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Response for loading the personal account information pages\r\nclass AccountInfoView extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      multiplier: 1.0,\r\n    };\r\n  }\r\n\r\n  // First time the component is rendered, fetch data\r\n  async componentDidMount() {\r\n    // Validate that the user has authenticated\r\n    if (!token.val) {\r\n      // Don't fetch, render will automatically redirect the user\r\n      return;\r\n    }\r\n\r\n    // Call backend for account information\r\n    const res = await axios({\r\n      method: \"get\",\r\n      url: \"https://backend-426.herokuapp.com/api/user/accountInformation\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n    });\r\n\r\n    // If the call fails, redirect the user\r\n    if (res.data.error) {\r\n      window.location.href = \"../login\";\r\n    }\r\n\r\n    // Set the state based on the result of the call\r\n    this.setState(() => ({\r\n      email: res.data.data.email,\r\n      name: res.data.data.name,\r\n      created: res.data.data.accountCreatedDate,\r\n      balance: res.data.data.balance,\r\n      multiplier: res.data.data.multiplier,\r\n      maxProperties: res.data.data.maxProperties,\r\n      experience: res.data.data.experience,\r\n      location: res.data.data.location,\r\n      numProperties: res.data.data.properties.length,\r\n      properties: res.data.properties,\r\n    }));\r\n  }\r\n\r\n  // Handler if the user requests to upgrade their income multiplier\r\n  onUpgradeMultiplier = async () => {\r\n    // Make sure that they have enough money\r\n    if (this.state.balance <= 1000000) {\r\n      alert(\"You don't have enough money for this transaction!\");\r\n      return;\r\n    }\r\n\r\n    // Call API for upgrading\r\n    const res = await axios({\r\n      method: \"post\",\r\n      url: \"https://backend-426.herokuapp.com/api/user/increaseMultiplier\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n    });\r\n\r\n    // Abort if error\r\n    if (res.data.error) {\r\n      alert(\"Unable to upgrade!\");\r\n      return;\r\n    }\r\n\r\n    // Update state after API Call\r\n    this.setState(() => ({\r\n      balance: res.data.data.balance,\r\n      multiplier: res.data.data.multiplier,\r\n    }));\r\n  };\r\n\r\n  // Handler for if the user requests to upgrade their property limit\r\n  onUpgrade = async () => {\r\n    // Make sure that they have enough money\r\n    if (this.state.balance <= this.state.maxProperties ** 3) {\r\n      alert(\"You don't have enough money for this transaction!\");\r\n      return;\r\n    }\r\n\r\n    // Call API for upgrading\r\n    const res = await axios({\r\n      method: \"post\",\r\n      url: \"https://backend-426.herokuapp.com/api/user/buyLevel\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n    });\r\n\r\n    // Abort if error\r\n    if (res.data.error) {\r\n      alert(\"Unable to upgrade!\");\r\n      return;\r\n    }\r\n\r\n    // Update state after API Call\r\n    this.setState(() => ({\r\n      balance: res.data.data.balance,\r\n      maxProperties: res.data.data.maxProperties,\r\n    }));\r\n  };\r\n\r\n  // Handler for if the user wants to go back to the dashboard\r\n  onRedirectRequest = () => {\r\n    // Update state so we render a <Redirect> tag\r\n    this.setState(() => ({\r\n      redirect: true,\r\n    }));\r\n  };\r\n\r\n  //Handler if the user wants to go to the leaderboard\r\n  onLeaderboardRequest = () => {\r\n    // Update state so we render a <Redirect> tag\r\n    this.setState(() => ({\r\n      redirectLeader: true,\r\n    }));\r\n  };\r\n\r\n  // Helper function for converting big integers into dollar readable format\r\n  numberWithCommas(x) {\r\n    if (!x) {\r\n      return \"$0\";\r\n    }\r\n    x = parseFloat(x.toFixed(2));\r\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  // Handler if the user requests to sell a property\r\n  onSell = async (email, propertyId, tier) => {\r\n    // Defer to backend\r\n    const res = await axios({\r\n      method: \"post\",\r\n      url: \"https://backend-426.herokuapp.com/api/property/sell\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n      data: {\r\n        email: email,\r\n        id: propertyId,\r\n        tier: tier,\r\n      },\r\n    });\r\n\r\n    // Update state with properties that may have changed\r\n    this.setState(() => ({\r\n      maxProperties: res.data.data.maxProperties,\r\n      location: res.data.data.user.location,\r\n      numProperties: res.data.data.user.properties.length,\r\n      properties: res.data.data.properties,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    // Validate token\r\n    if (!token.val) {\r\n      return <Redirect to=\"/426-frontend/login\"></Redirect>;\r\n    }\r\n\r\n    // If the user has requested to go back to the dashboard\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/426-frontend/dashboard\"></Redirect>;\r\n    }\r\n\r\n    // If user wants to visit leaderboard\r\n    if (this.state.redirectLeader) {\r\n      return <Redirect to=\"/426-frontend/leaderboard\"></Redirect>;\r\n    }\r\n\r\n    return (\r\n      <div class = \"ml\">\r\n        \r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\r\n          data-mdb-ripple-color=\"dark\" \r\n          onClick={this.onRedirectRequest}>Go Back to Dashboard</button>\r\n         <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\r\n          data-mdb-ripple-color=\"dark\"\r\n          onClick={this.onLeaderboardRequest}>Go to Leaderboard</button>\r\n        <hr />\r\n        <div>\r\n        <h1 class = \"ml\">Account Information:</h1>\r\n        <ul>\r\n          <li>\r\n            <strong>Email: </strong>\r\n            {this.state.email}\r\n          </li>\r\n          <li>\r\n            <strong>Name: </strong>\r\n            {this.state.name}\r\n          </li>\r\n          <li>\r\n            <strong>Account Created On: </strong>\r\n            {this.state.created}\r\n          </li>\r\n          <li>\r\n            <strong>Balance: </strong>\r\n            {this.numberWithCommas(this.state.balance)}\r\n          </li>\r\n          <li>\r\n            <strong>Maximum Properties: </strong>\r\n            {this.state.maxProperties}\r\n          </li>\r\n          <li>\r\n            <strong>Total Earnings: </strong>\r\n            {this.numberWithCommas(this.state.experience)}\r\n          </li>\r\n          <li>\r\n            <strong>Multiplier: </strong>\r\n            {this.state.multiplier.toFixed(2)}\r\n          </li>\r\n          <li>\r\n            <strong>Latitude: </strong>\r\n            {this.state.location ? this.state.location[0] : \"\"}\r\n          </li>\r\n          <li>\r\n            <strong>Longitude: </strong>\r\n            {this.state.location ? this.state.location[1] : \"\"}\r\n          </li>\r\n          <li>\r\n            <strong>Number of Properties: </strong>\r\n            {this.state.numProperties}\r\n          </li>\r\n        </ul>\r\n        <hr />\r\n        <h1 class = \"ml\">Upgrades</h1>\r\n        <p class = \"ml\">\r\n          You can currently own up to {this.state.maxProperties} properties and\r\n          you currently own {this.state.numProperties}. You can upgrade to{\" \"}\r\n          {2 * this.state.maxProperties} slots for{\" \"}\r\n          {this.numberWithCommas(this.state.maxProperties ** 3)}\r\n        </p>\r\n        {this.state.balance >= this.state.maxProperties ** 3 ? (\r\n          <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-success btn-rounded ml ms mbuttons\"\r\n          data-mdb-ripple-color=\"dark\"\r\n          onClick={this.onUpgrade}>Upgrade</button>\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-danger btn-rounded ml ms mbuttons\"\r\n            data-mdb-ripple-color=\"dark\">Not Enough funds!</button>\r\n        )}\r\n        <p class = \"ml\">\r\n          Your income multiplier is currently {this.state.multiplier.toFixed(2)}\r\n          . You can upgrade to {(this.state.multiplier + 0.01).toFixed(2)} for\r\n          $1,000,000\r\n        </p>\r\n        {this.state.balance >= 1000000 ? (\r\n          <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-success btn-rounded ml ms mbuttons\"\r\n          data-mdb-ripple-color=\"dark\"\r\n          onClick={this.onUpgradeMultiplier}>Upgrade</button>\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-danger btn-rounded ml ms mbuttons\"\r\n            data-mdb-ripple-color=\"dark\">Not Enough Funds!</button>\r\n        )}\r\n        <hr />\r\n        </div>\r\n        <h1 class = \"ml\">Your Properties:</h1>\r\n        <div class = \"wrapper\">\r\n\r\n        <PropertyOwnershipList\r\n          items={this.state.properties}\r\n          email={this.state.email}\r\n          onSell={this.onSell.bind(this)}\r\n        />\r\n        \r\n        \r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountInfoView;\r\n","export default __webpack_public_path__ + \"static/media/MapMarkerIcon.fb4229c5.png\";","import icon from \"./MapMarkerIcon.png\";\r\n\r\n// Responsible for showing an individual property on the map\r\nlet PropertyOnMap = (props) => {\r\n  return (\r\n    <div key={props.name}>\r\n      <img\r\n        src={icon}\r\n        style={{ width: \"25px\" }}\r\n        alt={\"Property visualized on the map\"}\r\n        onClick={() => {\r\n          props.onHover(props.location);\r\n        }}\r\n      />\r\n      {props.$hover ? props.name : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyOnMap;\r\n","export default __webpack_public_path__ + \"static/media/UserOnMapIcon.3e0031bf.png\";","import icon from \"./UserOnMapIcon.png\";\r\n\r\n// Responsible for showing the user on the map\r\nfunction UserOnMap(props) {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={icon}\r\n        style={{ width: \"30px\" }}\r\n        alt={\"User visualized on the map.\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserOnMap;\r\n","import React from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport PropertyOnMap from \"./PropertyOnMap\";\r\nimport UserOnMap from \"./UserOnMap\";\r\nimport \"./map.css\"\r\n\r\n// Responsible for showing the map on the dashboard visualizing properties that are near the user\r\nclass Map extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Store state for indicating if the user wants to move elsewhere on the map\r\n    this.state = {\r\n      walkLat: this.props.userLat,\r\n      walkLon: this.props.userLon,\r\n      walkCost: 0,\r\n    };\r\n  }\r\n\r\n  // If the user clicks on the map, update state\r\n  clickedMap = (e) => {\r\n    // Compute the cost to move to the target position\r\n    const walkCost = this.distanceInmBetweenEarthCoordinates(\r\n      this.props.userLat,\r\n      this.props.userLon,\r\n      e.lat,\r\n      e.lng\r\n    );\r\n\r\n    // Update state accordingly\r\n    this.setState(() => ({\r\n      walkLat: e.lat,\r\n      walkLon: e.lng,\r\n      walkCost: walkCost.toFixed(2),\r\n    }));\r\n  };\r\n\r\n  onHover = (e) => {\r\n    // Take the location and find the correct property\r\n    const target = this.props.properties.find((c) => {\r\n      return c.location[0] === e[0] && c.location[1] === e[1];\r\n    });\r\n\r\n    //Update state\r\n    this.setState(() => ({\r\n      hoverInfo: target,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let walkOffer;\r\n    walkOffer = (\r\n      <div>\r\n        <hr />\r\n        <strong>Latitude:</strong> {this.state.walkLat}\r\n        <br />\r\n        <strong>Longitude: </strong>\r\n        {this.state.walkLon}\r\n        <br />\r\n        <strong>Cost: </strong>${this.state.walkCost}\r\n        <br />\r\n        {this.props.userBalance > this.state.walkCost ? (\r\n           <button\r\n           type=\"button\"\r\n           class=\"btn btn-outline-success btn-rounded mbtn\"\r\n           data-mdb-ripple-color=\"dark\"\r\n            onClick={async () => {\r\n              // Only call API if they are moving to a new location\r\n              if (this.state.walkCost === 0) {\r\n                return;\r\n              }\r\n\r\n              if (\r\n                await this.props.moveHandler(\r\n                  this.state.walkLat,\r\n                  this.state.walkLon\r\n                )\r\n              ) {\r\n                // Now it costs no money to move where we are\r\n                this.setState(() => ({ walkCost: 0 }));\r\n              }\r\n            }}\r\n          >\r\n            Move\r\n          </button>\r\n        ) : (\r\n          <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-danger btn-rounded mbtn\"\r\n          data-mdb-ripple-color=\"dark\">Insufficient Funds</button>\r\n        )}\r\n        <hr />\r\n      </div>\r\n    );\r\n\r\n    let propertyVisuals;\r\n    if (this.props.properties) {\r\n      propertyVisuals = this.props.properties.map((e) => (\r\n        <PropertyOnMap\r\n          location={e.location}\r\n          name={e.name}\r\n          lat={e.location[0]}\r\n          lng={e.location[1]}\r\n          key={e.location[0] + \"\" + e.location[1]}\r\n          onHover={this.onHover}\r\n        />\r\n      ));\r\n    }\r\n\r\n    let hoverVisuals = \"Click a property for more details\";\r\n    if (this.state.hoverInfo) {\r\n      //hoverVisuals = (<div>\r\n      //<PropertyListVisualizer items={[this.state.hoverInfo]} handler={this.props.focusHandler} />\r\n      //</div>);\r\n      hoverVisuals = (\r\n        <div>\r\n          <h5>Name: {this.state.hoverInfo.name}</h5>\r\n          <h5>Value: {this.state.hoverInfo.value}</h5>\r\n          <h5>Income: {this.state.hoverInfo.hourlyIncome}</h5>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {walkOffer}\r\n        {hoverVisuals}\r\n        \r\n        <div style={{ width: \"500px\", height: \"500px\", marginLeft: \"425px\", border: \"15px solid green\", borderRadius: \"15px\" }}>\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{\r\n              key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n              language: \"en\",\r\n              region: \"US\",\r\n            }}\r\n            center={{ lat: this.props.userLat, lng: this.props.userLon }}\r\n            defaultZoom={15}\r\n            onClick={this.clickedMap}\r\n          >\r\n            {propertyVisuals}\r\n            <UserOnMap\r\n              lat={this.props.userLat}\r\n              lng={this.props.userLon}\r\n              name={\"Me\"}\r\n            />\r\n          </GoogleMapReact>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  degreesToRadians = (degrees) => {\r\n    return (degrees * Math.PI) / 180;\r\n  };\r\n\r\n  distanceInmBetweenEarthCoordinates(lat1, lon1, lat2, lon2) {\r\n    var earthRadiusKm = 6371;\r\n\r\n    var dLat = this.degreesToRadians(lat2 - lat1);\r\n    var dLon = this.degreesToRadians(lon2 - lon1);\r\n\r\n    lat1 = this.degreesToRadians(lat1);\r\n    lat2 = this.degreesToRadians(lat2);\r\n\r\n    var a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return 1000 * earthRadiusKm * c;\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport \"./propertylistvisualizer.css\"\r\n// Responsible for showing the user a list of nearby properties\r\nclass PropertyListVisualizer extends React.Component {\r\n  // Helper function for showing purchase buttons under each property tier\r\n  generateBuyButton(id, tier, cost) {\r\n    // Ensure that the user has sufficient funds\r\n    if (cost > this.props.balance) {\r\n      return <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-danger btn-rounded nebtn\"\r\n      data-mdb-ripple-color=\"dark\">Not enough $$$</button>;\r\n    }\r\n\r\n    return (\r\n      <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-success btn-rounded pbtn\"\r\n      data-mdb-ripple-color=\"dark\"\r\n        onClick={() => {\r\n          this.props.handler(id, tier);\r\n        }}\r\n      >\r\n        Purchase for {`${this.numberWithCommas(cost)}`}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  // Hepler for parsing numbers into a dollar readable format\r\n  numberWithCommas(x) {\r\n    if (!x) {\r\n      return \"\";\r\n    }\r\n    x = parseFloat(x.toFixed(2));\r\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  // Function for generating the entire list to show \r\n  generateEntries() {\r\n    // If we have no properties, or the component just loaded...\r\n    if (!this.props.items || this.props.items.length === 0) {\r\n      return (\r\n        <div>\r\n          <h1>No nearby properties found...</h1>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.items.map((e) => {\r\n      return (\r\n        <div class = \"card ct\" key={e._id}>\r\n          <h1 class = \"tm\">{e.name}</h1>\r\n          <h5>Hourly Income: {e.hourlyIncome}</h5>\r\n          <h5>Base Value: {e.value}</h5>\r\n          <h5>Level:{e.level} </h5>\r\n          <h5>Owners:</h5>\r\n          <ul>\r\n            <li>\r\n              Tier 1:{\" \"}\r\n              {e.ownerEmailT1\r\n                ? e.ownerEmailT1\r\n                : this.generateBuyButton(e._id, 1, e.value ** 1)}\r\n            </li>\r\n            <li>\r\n              Tier 2:{\" \"}\r\n              {e.ownerEmailT2\r\n                ? e.ownerEmailT2\r\n                : this.generateBuyButton(e._id, 2, e.value ** 2)}\r\n            </li>\r\n            <li>\r\n              Tier 3:{\" \"}\r\n              {e.ownerEmailT3\r\n                ? e.ownerEmailT3\r\n                : this.generateBuyButton(e._id, 3, e.value ** 3)}\r\n            </li>\r\n            <li>\r\n              Tier 4:{\" \"}\r\n              {e.ownerEmailT4\r\n                ? e.ownerEmailT4\r\n                : this.generateBuyButton(e._id, 4, e.value ** 4)}\r\n            </li>\r\n            <li>\r\n              Tier 5:{\" \"}\r\n              {e.ownerEmailT5\r\n                ? e.ownerEmailT5\r\n                : this.generateBuyButton(e._id, 5, e.value ** 5)}\r\n            </li>\r\n          </ul>\r\n          \r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.generateEntries()}</div>;\r\n  }\r\n}\r\n\r\nexport default PropertyListVisualizer;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { token } from \"../token\";\r\nimport Map from \"./Map\";\r\nimport PropertyListVisualizer from \"./PropertyListVisualizer\";\r\nimport \"./dashboard.css\"\r\n\r\n// Responsible for rendering the dashboard shown to the user after authentication\r\nclass Dashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  // When the component first loads, fetch information\r\n  async componentDidMount() {\r\n    if (!token.val) {\r\n      return;\r\n    }\r\n\r\n    // Call the backend to get user account information\r\n    const res = await axios({\r\n      method: \"get\",\r\n      url: \"https://backend-426.herokuapp.com/api/user/accountInformation\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n    });\r\n\r\n    // If the call fails, redirect user to authenticate\r\n    if (res.data.error) {\r\n      window.location.href = \"../login\";\r\n    }\r\n\r\n    // Call backend to find properties to show on the map\r\n    const localProperties = await axios({\r\n      method: \"post\",\r\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n      data: {\r\n        lat: res.data.data.location[0],\r\n        lon: res.data.data.location[1],\r\n        range: 500,\r\n      },\r\n    });\r\n\r\n    // If the call fails, redirect user to authenticate\r\n    if (res.data.error) {\r\n      window.location.href = \"../login\";\r\n    }\r\n\r\n    // Store both results in state\r\n    this.setState(() => ({\r\n      balance: res.data.data.balance,\r\n      lat: res.data.data.location[0],\r\n      lon: res.data.data.location[1],\r\n      propertiesToShow: localProperties.data,\r\n    }));\r\n  }\r\n\r\n  // If the user requests to go to the account view page\r\n  changePage = () => {\r\n    // Update state so we render a Redirect tag\r\n    this.setState(() => ({\r\n      redirect: <Redirect to=\"/426-frontend/personal\"></Redirect>,\r\n    }));\r\n  };\r\n\r\n  // If the user requests to make a move on the map\r\n  makeMove = async (walkLat, walkLon) => {\r\n    // Immediately call backend\r\n    const res = await axios({\r\n      method: \"post\",\r\n      url: \"https://backend-426.herokuapp.com/api/user/move\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n      data: {\r\n        lat: walkLat,\r\n        lon: walkLon,\r\n      },\r\n    });\r\n\r\n    // Get the new properties that are nearby the user\r\n    const localProperties = await axios({\r\n      method: \"post\",\r\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n      data: {\r\n        lat: walkLat,\r\n        lon: walkLon,\r\n        range: 500,\r\n      },\r\n    });\r\n\r\n    // Update state accordingly\r\n    this.setState(() => ({\r\n      balance: res.data.data.balance,\r\n      lat: res.data.data.lat,\r\n      lon: res.data.data.lon,\r\n      propertiesToShow: localProperties.data,\r\n    }));\r\n\r\n    // Inform the walk offer component that the move succeeded\r\n    return true;\r\n  };\r\n\r\n  // Handler if the user requests to buy a certain tier of a property\r\n  makePurchase = async (id, tier) => {\r\n    // Defer to backend\r\n    const res = await axios({\r\n      method: \"post\",\r\n      url: \"https://backend-426.herokuapp.com/api/property/buy\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n      data: {\r\n        propertyId: id,\r\n        tier: tier,\r\n      },\r\n    });\r\n\r\n    // Refresh property information\r\n    const localProperties = await axios({\r\n      method: \"post\",\r\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n      data: {\r\n        lat: this.state.lat,\r\n        lon: this.state.lon,\r\n        range: 500,\r\n      },\r\n    });\r\n\r\n    // Handle results and possible error\r\n    if (res.data.error) {\r\n      this.setState(() => ({\r\n        propertiesToShow: localProperties.data,\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        balance: res.data.data.user.balance,\r\n        propertiesToShow: localProperties.data,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Helper for turning big int into dollar readable format\r\n  numberWithCommas(x) {\r\n    if (!x) {\r\n      return \"\";\r\n    }\r\n    x = parseFloat(x.toFixed(2));\r\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  render() {\r\n    // Validate token\r\n    if (!token.val) {\r\n      return <Redirect to=\"/426-frontend/login\"></Redirect>;\r\n    }\r\n\r\n    let vals = this.state.propertiesToShow;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Welcome: A game by Casey S. and Milen P.</h1>\r\n        {this.state.redirect}\r\n        {this.state.goToLeaderboard}\r\n        <button onClick={this.changePage}>Go to Account View</button>\r\n        <button\r\n          onClick={() => {\r\n            this.setState(() => ({\r\n              goToLeaderboard: (\r\n                <Redirect to=\"/426-frontend/leaderboard\"></Redirect>\r\n              ),\r\n            }));\r\n          }}\r\n        >\r\n          Go to Leaderboard\r\n        </button>\r\n        <p>\r\n          <strong>Balance:</strong>\r\n          {this.numberWithCommas(this.state.balance)}\r\n        </p>\r\n        <div class = \"map ct\">\r\n        <Map \r\n          userLat={this.state.lat}\r\n          userLon={this.state.lon}\r\n          properties={this.state.propertiesToShow}\r\n          userBalance={this.state.balance}\r\n          moveHandler={this.makeMove.bind(this)}\r\n          focusHandler={this.makePurchase.bind(this)}\r\n        />\r\n        </div>\r\n        <div>\r\n          <hr />\r\n          <h3 class = \"ct\">\r\n            {this.state.propertiesToShow\r\n              ? `Showing ${this.state.propertiesToShow.length} properties`\r\n              : \"Showing no properties\"}\r\n          </h3>\r\n          <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton \"\r\n          data-mdb-ripple-color=\"dark\" \r\n            onClick={() => {\r\n              this.setState((prevState) => ({\r\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\r\n                  return a.value > b.value ? 1 : -1;\r\n                }),\r\n              }));\r\n            }}\r\n          >\r\n            Sort by Value Ascending\r\n          </button>\r\n          <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\r\n          data-mdb-ripple-color=\"dark\" \r\n            onClick={() => {\r\n              this.setState((prevState) => ({\r\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\r\n                  return a.value > b.value ? -1 : 1;\r\n                }),\r\n              }));\r\n            }}\r\n          >\r\n            Sort by Value Ascending\r\n          </button>\r\n          <br />\r\n          <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\r\n          data-mdb-ripple-color=\"dark\" \r\n            onClick={() => {\r\n              this.setState((prevState) => ({\r\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\r\n                  return a.hourlyIncome > b.hourlyIncome ? 1 : -1;\r\n                }),\r\n              }));\r\n            }}\r\n          >\r\n            Sort by Income Ascending\r\n          </button>\r\n          <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\r\n          data-mdb-ripple-color=\"dark\" \r\n            onClick={() => {\r\n              this.setState((prevState) => ({\r\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\r\n                  return a.hourlyIncome > b.hourlyIncome ? -1 : 1;\r\n                }),\r\n              }));\r\n            }}\r\n          >\r\n            Sort by Income Descending\r\n          </button>\r\n          <br />\r\n          <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\r\n          data-mdb-ripple-color=\"dark\" \r\n            onClick={() => {\r\n              this.setState((prevState) => ({\r\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\r\n                  return a.level > b.level ? 1 : -1;\r\n                }),\r\n              }));\r\n            }}\r\n          >\r\n            Sort by Level Ascending\r\n          </button>\r\n          <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\r\n          data-mdb-ripple-color=\"dark\" \r\n            onClick={() => {\r\n              this.setState((prevState) => ({\r\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\r\n                  return a.level > b.level ? -1 : 1;\r\n                }),\r\n              }));\r\n            }}\r\n          >\r\n            Sort by Level Descending\r\n          </button>\r\n          \r\n          <PropertyListVisualizer\r\n            items={vals}\r\n            balance={this.state.balance}\r\n            handler={this.makePurchase.bind(this)}\r\n            key={this.state.propertiesToShow}\r\n            id={vals}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { token } from \"../token\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./leaderboard.css\"\r\n\r\n// Responsible for showing the leaderboard of the top 10 players, ranked by lifetime earnings\r\nclass Leaderboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // State for handling redirect requests\r\n    this.state = {\r\n      redirectAccountView: false,\r\n      redirectDashboard: false,\r\n    };\r\n  }\r\n\r\n  // Helper for turning big int into dollar readable format\r\n  numberWithCommas(x) {\r\n    if (!x) {\r\n      return \"\";\r\n    }\r\n    x = parseFloat(x.toFixed(2));\r\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  // When the component is first loaded, get the leaderboard information\r\n  async componentDidMount() {\r\n    // Make sure we have a valid token\r\n    if (!token.val) {\r\n      return;\r\n    }\r\n\r\n    // Call the backend to get user account information\r\n    const res = await axios({\r\n      method: \"get\",\r\n      url: \"https://backend-426.herokuapp.com/api/user/leaderboard\",\r\n      headers: {\r\n        \"auth-token\": token.val,\r\n      },\r\n    });\r\n\r\n    // If there was an error, inform the user and abort\r\n    if (res.data.error) {\r\n      alert(\"Unable to access leaderboard\");\r\n      return;\r\n    }\r\n\r\n    // If we succeed, store data in state\r\n    this.setState(() => ({\r\n      people: res.data.data,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    // Handle the case where the user clicks the account view button\r\n    if (this.state.redirectAccountView) {\r\n      return <Redirect to=\"/426-frontend/personal\"></Redirect>;\r\n    }\r\n\r\n    // Handle the case where the user clicks the dashboard view button\r\n    if (this.state.redirectDashboard) {\r\n      return <Redirect to=\"/426-frontend/dashboard\"></Redirect>;\r\n    }\r\n\r\n    return (\r\n      <div class = \"pad\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\r\n          data-mdb-ripple-color=\"dark\" \r\n          onClick={() => {\r\n            this.setState(() => ({ redirectDashboard: true }));\r\n          }}\r\n        >\r\n          Dashboard\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\r\n          data-mdb-ripple-color=\"dark\" \r\n          onClick={() => {\r\n            this.setState(() => ({ redirectAccountView: true }));\r\n          }}\r\n        >\r\n          Account View\r\n        </button>\r\n        <hr />\r\n        <h1 class = \"ct\">Leaderboard</h1>\r\n        <ol>\r\n          {this.state.people\r\n            ? this.state.people.map((p) => {\r\n                return (\r\n                  <div class = 'card c2'>\r\n                  <li class = \"ct hc\" key={p.name + p.experience}>\r\n                      <h3 class = \"hc\">{p.name}</h3>\r\n                      <br />\r\n                      <strong>Properties Owned:</strong> {p.numProperties}\r\n                      <br />\r\n                      <strong>Lifetime Earnings:</strong>{\" \"}\r\n                      {this.numberWithCommas(p.experience)}\r\n                      \r\n                  </li>\r\n                  </div>\r\n                );\r\n              })\r\n            : \"No Players Found in Database...\"}\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Leaderboard;\r\n","// React Imports\r\nimport React from \"react\"; \r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n// Component Imports\r\nimport Register from \"./components/Register\";\r\nimport Login from \"./components/Login\";\r\nimport AccountInfoView from \"./components/AccountInfoView\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Leaderboard from \"./components/Leaderboard\";\r\nimport { useHistory } from \"react-router\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./app.css\";\r\n//import Jumbotron from 'react-bootstrap/Jumbotron'\r\n\r\n\r\nfunction App() {\r\n  // Hook for changing browser destination\r\n  let history = useHistory();\r\n\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/426-frontend/\">\r\n          <div class = 'container'>\r\n            <div class ='row-md-6'>\r\n              <div class ='col-md-6'>\r\n                <div class = 'card'>\r\n                  <form>\r\n                    <h1 class=\"display-3\">Welcome to the Game</h1>\r\n                    <button  onClick={() => {\r\n                      history.push(\"/426-frontend/login\")\r\n                    }}>Move to Login</button>\r\n                    <button  onClick={() => {\r\n                      history.push(\"/426-frontend/register\")\r\n                    }}>Move to Register</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/426-frontend/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/426-frontend/register\">\r\n          <Register />\r\n        </Route>\r\n        <Route path=\"/426-frontend/personal\">\r\n          <AccountInfoView />\r\n        </Route>\r\n        <Route path=\"/426-frontend/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n        <Route path=\"/426-frontend/leaderboard\">\r\n          <Leaderboard />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/Register.js","token.js","components/Login.js","components/PropertyOwnershipList.js","components/AccountInfoView.js","components/MapMarkerIcon.png","components/PropertyOnMap.js","components/UserOnMapIcon.png","components/UserOnMap.js","components/Map.js","components/PropertyListVisualizer.js","components/Dashboard.js","components/Leaderboard.js","components/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["Register","nameFieldChanged","e","setState","nameField","target","value","emailFieldChanged","emailField","passwordFieldChanged","passField","onRegister","a","axios","method","url","headers","data","name","state","email","password","status","to","toString","className","this","type","placeholder","onChange","data-mdb-ripple-color","onClick","React","Component","token","val","Login","onLogin","res","PropertyOwnershipList","props","items","processed","map","hourlyIncome","level","ownerEmailT1","onSell","_id","ownerEmailT2","ownerEmailT3","ownerEmailT4","ownerEmailT5","AccountInfoView","onUpgradeMultiplier","balance","alert","error","multiplier","onUpgrade","maxProperties","onRedirectRequest","redirect","onLeaderboardRequest","redirectLeader","propertyId","tier","id","location","user","numProperties","properties","length","window","href","created","accountCreatedDate","experience","x","parseFloat","toFixed","replace","numberWithCommas","bind","PropertyOnMap","src","icon","style","width","alt","onHover","$hover","UserOnMap","Map","clickedMap","walkCost","distanceInmBetweenEarthCoordinates","userLat","userLon","lat","lng","process","addy","walkLat","walkLon","address","results","formatted","find","c","hoverInfo","degreesToRadians","degrees","Math","PI","walkOffer","propertyVisuals","userBalance","moveHandler","hoverVisuals","height","marginLeft","marginRight","border","borderRadius","bootstrapURLKeys","key","language","region","center","defaultZoom","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","sqrt","PropertyListVisualizer","cost","handler","generateBuyButton","generateEntries","Dashboard","changePage","makeMove","lon","range","localProperties","propertiesToShow","makePurchase","vals","goToLeaderboard","focusHandler","prevState","sort","b","align","Leaderboard","redirectAccountView","redirectDashboard","people","p","Homepage","numPlayers","totalEarnings","numUsers","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be0597d2.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./register.css\";\n\n// Responsible for generating register page\nclass Register extends React.Component {\n  constructor() {\n    super();\n    // Store the form information as state\n    this.state = {\n      nameField: \"\",\n      passField: \"\",\n      emailField: \"\",\n      status: \"\",\n    };\n  }\n\n  // If the user name changes, update state\n  nameFieldChanged = (e) => {\n    this.setState(() => ({\n      nameField: e.target.value,\n    }));\n  };\n\n  // If the user email changes, update state\n  emailFieldChanged = (e) => {\n    this.setState(() => ({\n      emailField: e.target.value,\n    }));\n  };\n\n  // If the user password changes, update state\n  passwordFieldChanged = (e) => {\n    this.setState(() => ({\n      passField: e.target.value,\n    }));\n  };\n\n  // Handler when the user attempts to register\n  onRegister = async () => {\n    try {\n      // Defer to backend\n      await axios({\n        method: \"post\",\n        url: \"https://backend-426.herokuapp.com/api/users/register\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        data: {\n          name: this.state.nameField,\n          email: this.state.emailField,\n          password: this.state.passField,\n        },\n      });\n\n      // If we suceed, redirect user to authentication page\n      this.setState(() => ({\n        status: <Redirect to=\"/Earth3-Frontend/login\"></Redirect>,\n      }));\n\n    } catch (err) {\n      // If we fail, show information to user\n      this.setState(() => ({ status: err.toString() }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"im\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"c3\">\n              {this.state.status}\n              {this.state.status ? <br /> : \"\"}\n              <form className=\"box eh\">\n                <h1>Register</h1>\n                <p className=\"text-muted\">\n                  {\" \"}\n                Please enter your Name, Email, and Password!\n              </p>\n                <input\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  onChange={this.nameFieldChanged}\n                ></input>\n                <br />\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  onChange={this.emailFieldChanged}\n                ></input>\n                <br />\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.passwordFieldChanged}\n                ></input>\n                <br />\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-success btn-rounded\"\n                  data-mdb-ripple-color=\"dark\"\n                  onClick={this.onRegister}\n                >\n                  Register\n              </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","/*\n * Used to store JWT token for authentication purposes \n */\n\nlet token = {\n    val: \"\",\n};\nexport {token};\n","import axios from \"axios\";\nimport React from \"react\";\nimport { token } from \"../token\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./login.css\";\n\n// Responsible for rendering the login page\nclass Login extends React.Component {\n  constructor() {\n    super();\n    \n    // Store the current user input, at any given moment, in state\n    this.state = {\n      passField: \"\",\n      emailField: \"\",\n      status: \"\",\n    };\n  }\n\n  // If the user changes their email, update state\n  emailFieldChanged = (e) => {\n    this.setState(() => ({\n      emailField: e.target.value,\n    }));\n  };\n\n  // If the user updates their password, change state\n  passwordFieldChanged = (e) => {\n    this.setState(() => ({\n      passField: e.target.value,\n    }));\n  };\n\n  // Handler for when the user clicks the login button\n  onLogin = async () => {\n    try {\n      // Call the backend \n      let res = await axios({\n        method: \"post\",\n        url: \"https://backend-426.herokuapp.com/api/users/login\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        data: {\n          email: this.state.emailField,\n          password: this.state.passField,\n        },\n      });\n\n      // Grab the token and store it in the global variable\n      token.val = res.data.data.token;\n\n      // Update state so we redirect to the dashboard view\n      this.setState(() => ({\n        status: <Redirect to=\"/Earth3-Frontend/dashboard\"></Redirect>,\n      }));\n    } catch (err) {\n      // If there was an error authenticating, show it to the user \n      this.setState(() => ({ status: err.toString() }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"im\">\n        <div className=\"container\">\n          <div className=\"row-md-5\">\n            <div className=\"col-md-6 \">\n              <div className=\"c3\">\n                {this.state.status}\n                {this.state.status ? <br /> : \"\"}\n                <form className=\"box\">\n                  <h1>Login</h1>\n                  <p className=\"text-muted\">\n                    {\" \"}\n                    Please enter your Email and Password!\n                  </p>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    onChange={this.emailFieldChanged}\n                  ></input>\n                  <br />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={this.passwordFieldChanged}\n                  ></input>\n                  <br />\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-success btn-rounded\"\n                    data-mdb-ripple-color=\"dark\"\n                    onClick={this.onLogin}\n                  >\n                    Login\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","// Responsible for generating the list of properties owned by the current user\nimport \"./propertyowner.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction PropertyOwnershipList(props) {\n  // If user owns no properties, stop\n  if (!props.items) {\n    return <h1>Buy Properties to Get Started...</h1>;\n  }\n\n  let processed = \"\";\n\n  processed = props.items.map((e) => {\n    return (\n      \n      <div className=\"card cpo\" key={e._id}>\n        <h1 className=\"ct tm\">{e.name}</h1>\n        <h7 className=\"ct\">Hourly Income: {e.hourlyIncome}</h7>\n        <h7 className=\"ct\">Base Value: {e.value}</h7>\n        <h7 className=\"ct\">Level:{e.level} </h7>\n        <h4 className=\"ct\">Owners:</h4>\n        <ul className=\"ct c \">\n\n          <li className=\"ct mg\">\n\n            Tier 1:  {e.ownerEmailT1 ? e.ownerEmailT1 : <em>Unowned  </em>}\n            {e.ownerEmailT1 === props.email ? (\n\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-warning btn-rounded sbtn\"\n                data-mdb-ripple-color=\"dark\"\n                onClick={() => {\n                  props.onSell(props.email, e._id, 1);\n                }}\n              >\n                Sell\n              </button>\n            ) : (\n              \"\"\n            )}\n          </li>\n          <li className=\"ct mg\">\n            Tier 2: {e.ownerEmailT2 ? e.ownerEmailT2 : <em>Unowned  </em>}\n            {e.ownerEmailT2 === props.email ? (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-warning btn-rounded sbtn\"\n                data-mdb-ripple-color=\"dark\"\n                onClick={() => {\n                  props.onSell(props.email, e._id, 2);\n                }}\n              >\n                Sell\n              </button>\n            ) : (\n              \"\"\n            )}\n          </li>\n          <li className=\"ct mg \">\n            Tier 3: {e.ownerEmailT3 ? e.ownerEmailT3 : <em>Unowned</em>}\n            {e.ownerEmailT3 === props.email ? (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-warning btn-rounded sbtn\"\n                data-mdb-ripple-color=\"dark\"\n                onClick={() => {\n                  props.onSell(props.email, e._id, 3);\n                }}\n              >\n                Sell\n              </button>\n            ) : (\n              \"\"\n            )}\n          </li>\n          <li className=\"ct mg\">\n            Tier 4: {e.ownerEmailT4 ? e.ownerEmailT4 : <em>Unowned  </em>}\n            {e.ownerEmailT4 === props.email ? (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-warning btn-rounded sbtn\"\n                data-mdb-ripple-color=\"dark\"\n                onClick={() => {\n                  props.onSell(props.email, e._id, 4);\n                }}\n              >\n                Sell\n              </button>\n            ) : (\n              \"\"\n            )}\n          </li>\n          <li className=\"ct mg\">\n            Tier 5: {e.ownerEmailT5 ? e.ownerEmailT5 : <em>Unowned  </em>}\n            {e.ownerEmailT5 === props.email ? (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-warning btn-rounded sbtn\"\n                data-mdb-ripple-color=\"dark\"\n                onClick={() => {\n                  props.onSell(props.email, e._id, 5);\n                }}\n              >\n                Sell\n              </button>\n            ) : (\n              \"\"\n            )}\n          </li>\n        </ul>\n      </div>\n    \n    );\n  });\n\n  return <div>{processed}</div>;\n}\n\nexport default PropertyOwnershipList;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { token } from \"../token\";\nimport axios from \"axios\";\nimport PropertyOwnershipList from \"./PropertyOwnershipList\";\nimport \"./accountinfoview.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Response for loading the personal account information pages\nclass AccountInfoView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      multiplier: 1.0,\n    };\n  }\n\n  // First time the component is rendered, fetch data\n  async componentDidMount() {\n    // Validate that the user has authenticated\n    if (!token.val) {\n      // Don't fetch, render will automatically redirect the user\n      return;\n    }\n\n    // Call backend for account information\n    const res = await axios({\n      method: \"get\",\n      url: \"https://backend-426.herokuapp.com/api/user/accountInformation\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // If the call fails, redirect the user\n    if (res.data.error) {\n      window.location.href = \"../login\";\n    }\n\n    // Set the state based on the result of the call\n    this.setState(() => ({\n      email: res.data.data.email,\n      name: res.data.data.name,\n      created: res.data.data.accountCreatedDate,\n      balance: res.data.data.balance,\n      multiplier: res.data.data.multiplier,\n      maxProperties: res.data.data.maxProperties,\n      experience: res.data.data.experience,\n      location: res.data.data.location,\n      numProperties: res.data.data.properties.length,\n      properties: res.data.properties,\n    }));\n  }\n\n  // Handler if the user requests to upgrade their income multiplier\n  onUpgradeMultiplier = async () => {\n    // Make sure that they have enough money\n    if (this.state.balance <= 1000000) {\n      alert(\"You don't have enough money for this transaction!\");\n      return;\n    }\n\n    // Call API for upgrading\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/user/increaseMultiplier\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // Abort if error\n    if (res.data.error) {\n      alert(\"Unable to upgrade!\");\n      return;\n    }\n\n    // Update state after API Call\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      multiplier: res.data.data.multiplier,\n    }));\n  };\n\n  // Handler for if the user requests to upgrade their property limit\n  onUpgrade = async () => {\n    // Make sure that they have enough money\n    if (this.state.balance <= this.state.maxProperties ** 3) {\n      alert(\"You don't have enough money for this transaction!\");\n      return;\n    }\n\n    // Call API for upgrading\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/user/buyLevel\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // Abort if error\n    if (res.data.error) {\n      alert(\"Unable to upgrade!\");\n      return;\n    }\n\n    // Update state after API Call\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      maxProperties: res.data.data.maxProperties,\n    }));\n  };\n\n  // Handler for if the user wants to go back to the dashboard\n  onRedirectRequest = () => {\n    // Update state so we render a <Redirect> tag\n    this.setState(() => ({\n      redirect: true,\n    }));\n  };\n\n  //Handler if the user wants to go to the leaderboard\n  onLeaderboardRequest = () => {\n    // Update state so we render a <Redirect> tag\n    this.setState(() => ({\n      redirectLeader: true,\n    }));\n  };\n\n  // Helper function for converting big integers into dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"$0\";\n    }\n    x = parseFloat(x.toFixed(2));\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  // Handler if the user requests to sell a property\n  onSell = async (email, propertyId, tier) => {\n    // Defer to backend\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/sell\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        email: email,\n        id: propertyId,\n        tier: tier,\n      },\n    });\n\n    // Update state with properties that may have changed\n    this.setState(() => ({\n      maxProperties: res.data.data.maxProperties,\n      location: res.data.data.user.location,\n      numProperties: res.data.data.user.properties.length,\n      properties: res.data.data.properties,\n    }));\n  };\n\n  render() {\n    // Validate token\n    if (!token.val) {\n      return <Redirect to=\"/Earth3-Frontend/login\"></Redirect>;\n    }\n\n    // If the user has requested to go back to the dashboard\n    if (this.state.redirect) {\n      return <Redirect to=\"/Earth3-Frontend/dashboard\"></Redirect>;\n    }\n\n    // If user wants to visit leaderboard\n    if (this.state.redirectLeader) {\n      return <Redirect to=\"/Earth3-Frontend/leaderboard\"></Redirect>;\n    }\n\n    return (\n      <div className=\"ml back\">\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={this.onRedirectRequest}>Go Back to Dashboard</button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={this.onLeaderboardRequest}>Go to Leaderboard</button>\n        <hr />\n        <div>\n          <h1 className=\"ml\">Account Information:</h1>\n          <ul>\n            <li>\n              <strong>Email: </strong>\n              {this.state.email}\n            </li>\n            <li>\n              <strong>Name: </strong>\n              {this.state.name}\n            </li>\n            <li>\n              <strong>Account Created On: </strong>\n              {this.state.created}\n            </li>\n            <li>\n              <strong>Balance: </strong>\n              {this.numberWithCommas(this.state.balance)}\n            </li>\n            <li>\n              <strong>Maximum Properties: </strong>\n              {this.state.maxProperties}\n            </li>\n            <li>\n              <strong>Total Earnings: </strong>\n              {this.numberWithCommas(this.state.experience)}\n            </li>\n            <li>\n              <strong>Multiplier: </strong>\n              {this.state.multiplier.toFixed(2)}\n            </li>\n            <li>\n              <strong>Latitude: </strong>\n              {this.state.location ? this.state.location[0] : \"\"}\n            </li>\n            <li>\n              <strong>Longitude: </strong>\n              {this.state.location ? this.state.location[1] : \"\"}\n            </li>\n            <li>\n              <strong>Number of Properties: </strong>\n              {this.state.numProperties}\n            </li>\n          </ul>\n          <hr />\n          <h1 className=\"ml\">Upgrades</h1>\n          <p className=\"ml\">\n            You can currently own up to {this.state.maxProperties} properties and\n          you currently own {this.state.numProperties}. You can upgrade to{\" \"}\n            {2 * this.state.maxProperties} slots for{\" \"}\n            {this.numberWithCommas(this.state.maxProperties ** 3)}\n          </p>\n          {this.state.balance >= this.state.maxProperties ** 3 ? (\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-success btn-rounded ml ms mbuttons\"\n              data-mdb-ripple-color=\"dark\"\n              onClick={this.onUpgrade}>Upgrade</button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger btn-rounded ml ms mbuttons\"\n              data-mdb-ripple-color=\"dark\">Not Enough funds!</button>\n          )}\n          <p className=\"ml\">\n            Your income multiplier is currently {this.state.multiplier.toFixed(2)}\n          . You can upgrade to {(this.state.multiplier + 0.01).toFixed(2)} for\n          $1,000,000\n        </p>\n          {this.state.balance >= 1000000 ? (\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-success btn-rounded ml ms mbuttons\"\n              data-mdb-ripple-color=\"dark\"\n              onClick={this.onUpgradeMultiplier}>Upgrade</button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger btn-rounded ml ms mbuttons\"\n              data-mdb-ripple-color=\"dark\">Not Enough Funds!</button>\n          )}\n          <hr />\n        </div>\n        <h1 className=\"ml\">Your Properties:</h1>\n        <div className=\"wrapper\">\n\n          <PropertyOwnershipList\n            items={this.state.properties}\n            email={this.state.email}\n            onSell={this.onSell.bind(this)}\n          />\n\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default AccountInfoView;\n","export default __webpack_public_path__ + \"static/media/MapMarkerIcon.fb4229c5.png\";","import icon from \"./MapMarkerIcon.png\";\n\n// Responsible for showing an individual property on the map\nlet PropertyOnMap = (props) => {\n  return (\n    <div key={props.name}>\n      <img\n        src={icon}\n        style={{ width: \"25px\" }}\n        alt={\"Property visualized on the map\"}\n        onClick={() => {\n          props.onHover(props.location);\n        }}\n      />\n      {props.$hover ? props.name : \"\"}\n    </div>\n  );\n};\n\nexport default PropertyOnMap;\n","export default __webpack_public_path__ + \"static/media/UserOnMapIcon.3e0031bf.png\";","import icon from \"./UserOnMapIcon.png\";\n\n// Responsible for showing the user on the map\nfunction UserOnMap(props) {\n  return (\n    <div>\n      <img\n        src={icon}\n        style={{ width: \"30px\" }}\n        alt={\"User visualized on the map.\"}\n      />\n    </div>\n  );\n}\n\nexport default UserOnMap;\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport PropertyOnMap from \"./PropertyOnMap\";\nimport UserOnMap from \"./UserOnMap\";\nimport \"./map.css\"\nimport axios from \"axios\";\n\n// Responsible for showing the map on the dashboard visualizing properties that are near the user\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    // Store state for indicating if the user wants to move elsewhere on the map\n    this.state = {\n      walkLat: this.props.userLat,\n      walkLon: this.props.userLon,\n      walkCost: 0,\n    };\n  }\n\n  // If the user clicks on the map, update state\n  clickedMap = async (e) => {\n    // Compute the cost to move to the target position\n    const walkCost = this.distanceInmBetweenEarthCoordinates(\n      this.props.userLat,\n      this.props.userLon,\n      e.lat,\n      e.lng\n    );\n\n    // Get address\n    const addy = await axios(`https://api.opencagedata.com/geocode/v1/json?key=${process.env.REACT_APP_REVERSE_API_KEY}&pretty=1&q=${e.lat}%2C${e.lng}`)\n\n    // Update state accordingly\n    this.setState(() => ({\n      walkLat: e.lat,\n      walkLon: e.lng,\n      walkCost: walkCost.toFixed(2),\n      address: addy.data.results[0].formatted,\n    }));\n  };\n\n  onHover = (e) => {\n    // Take the location and find the correct property\n    const target = this.props.properties.find((c) => {\n      return c.location[0] === e[0] && c.location[1] === e[1];\n    });\n\n    //Update state\n    this.setState(() => ({\n      hoverInfo: target,\n    }));\n  };\n\n  render() {\n    let walkOffer;\n    walkOffer = (\n      <div>\n        <hr />\n        <strong className=\"ll\">Latitude: {this.state.walkLat}</strong>\n        <strong className=\"ll\">Longitude:\n        {this.state.walkLon}\n          {this.state.address ? <p>Address: {this.state.address}</p> : \"\"}\n        </strong>\n        <br />\n        <strong className=\"ll\">Cost: ${this.state.walkCost}</strong>\n        <br />\n        {this.props.userBalance > this.state.walkCost ? (\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-success btn-rounded mbtn\"\n            data-mdb-ripple-color=\"dark\"\n            onClick={async () => {\n              // Only call API if they are moving to a new location\n              if (this.state.walkCost === 0) {\n                return;\n              }\n\n              if (\n                await this.props.moveHandler(\n                  this.state.walkLat,\n                  this.state.walkLon\n                )\n              ) {\n                // Now it costs no money to move where we are\n                this.setState(() => ({ walkCost: 0 }));\n              }\n            }}\n          >\n            Move\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-danger btn-rounded mbtn\"\n            data-mdb-ripple-color=\"dark\">Insufficient Funds</button>\n        )}\n        <hr />\n      </div>\n    );\n\n    let propertyVisuals;\n    if (this.props.properties) {\n      propertyVisuals = this.props.properties.map((e) => (\n        <PropertyOnMap\n          location={e.location}\n          name={e.name}\n          lat={e.location[0]}\n          lng={e.location[1]}\n          key={e.location[0] + \"\" + e.location[1]}\n          onHover={this.onHover}\n        />\n      ));\n    }\n\n    let hoverVisuals = \"Click a property for more details\";\n    if (this.state.hoverInfo) {\n      //hoverVisuals = (<div>\n      //<PropertyListVisualizer items={[this.state.hoverInfo]} handler={this.props.focusHandler} />\n      //</div>);\n      hoverVisuals = (\n        <div className = \"locInfo\">\n          <h3>{this.state.hoverInfo.name}</h3>\n          <h5>Value: {this.state.hoverInfo.value}</h5>\n          <h5>Income: {this.state.hoverInfo.hourlyIncome}</h5>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {walkOffer}\n        {hoverVisuals}\n        \n        <div style={{ width: \"800px\", height: \"500px\", marginLeft: \"auto\", marginRight: \"auto\", border: \"15px solid #032544\", borderRadius: \"15px\" }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n              language: \"en\",\n              region: \"US\",\n            }}\n            center={{ lat: this.props.userLat, lng: this.props.userLon }}\n            defaultZoom={15}\n            onClick={this.clickedMap}\n          >\n            {propertyVisuals}\n            <UserOnMap\n              lat={this.props.userLat}\n              lng={this.props.userLon}\n              name={\"Me\"}\n            />\n          </GoogleMapReact>\n        </div>\n        \n      </div>\n    );\n  }\n\n  degreesToRadians = (degrees) => {\n    return (degrees * Math.PI) / 180;\n  };\n\n  distanceInmBetweenEarthCoordinates(lat1, lon1, lat2, lon2) {\n    var earthRadiusKm = 6371;\n\n    var dLat = this.degreesToRadians(lat2 - lat1);\n    var dLon = this.degreesToRadians(lon2 - lon1);\n\n    lat1 = this.degreesToRadians(lat1);\n    lat2 = this.degreesToRadians(lat2);\n\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return 1000 * earthRadiusKm * c;\n  }\n}\n\nexport default Map;\n","import React from \"react\";\nimport \"./propertylistvisualizer.css\"\n// Responsible for showing the user a list of nearby properties\nclass PropertyListVisualizer extends React.Component {\n  // Helper function for showing purchase buttons under each property tier\n  generateBuyButton(id, tier, cost) {\n    // Ensure that the user has sufficient funds\n    if (cost > this.props.balance) {\n      return <button\n      type=\"button\"\n      className=\"btn btn-outline-danger btn-rounded nebtn\"\n      data-mdb-ripple-color=\"dark\">Not enough $$$</button>;\n    }\n\n    return (\n      <button\n      type=\"button\"\n      className=\"btn btn-outline-success btn-rounded pbtn\"\n      data-mdb-ripple-color=\"dark\"\n        onClick={() => {\n          this.props.handler(id, tier);\n        }}\n      >\n        {`${this.numberWithCommas(cost)}`}\n      </button>\n    );\n  }\n\n  // Hepler for parsing numbers into a dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"\";\n    }\n    x = parseFloat(x.toFixed(2));\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  // Function for generating the entire list to show \n  generateEntries() {\n    // If we have no properties, or the component just loaded...\n    if (!this.props.items || this.props.items.length === 0) {\n      return (\n        <div>\n          <h1>No nearby properties found...</h1>\n        </div>\n      );\n    }\n\n    return this.props.items.map((e) => {\n      return (\n        <div className=\"card ct\" key={e._id}>\n          <h1 className=\"tm\">{e.name}</h1>\n          <h5>Hourly Income: {e.hourlyIncome}</h5>\n          <h5>Base Value: {e.value}</h5>\n          <h5>Level:{e.level} </h5>\n          <h5>Owners:</h5>\n          <ul className=\"c ct\">\n            <li>\n              Tier 1:{\" \"}\n              {e.ownerEmailT1\n                ? e.ownerEmailT1\n                : this.generateBuyButton(e._id, 1, e.value ** 1)}\n            </li>\n            <li>\n              Tier 2:{\" \"}\n              {e.ownerEmailT2\n                ? e.ownerEmailT2\n                : this.generateBuyButton(e._id, 2, e.value ** 2)}\n            </li>\n            <li>\n              Tier 3:{\" \"}\n              {e.ownerEmailT3\n                ? e.ownerEmailT3\n                : this.generateBuyButton(e._id, 3, e.value ** 3)}\n            </li>\n            <li>\n              Tier 4:{\" \"}\n              {e.ownerEmailT4\n                ? e.ownerEmailT4\n                : this.generateBuyButton(e._id, 4, e.value ** 4)}\n            </li>\n            <li>\n              Tier 5:{\" \"}\n              {e.ownerEmailT5\n                ? e.ownerEmailT5\n                : this.generateBuyButton(e._id, 5, e.value ** 5)}\n            </li>\n          </ul>\n        </div>\n       \n      );\n    });\n  }\n\n  render() {\n    return <div>{this.generateEntries()}</div>;\n  }\n}\n\nexport default PropertyListVisualizer;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { token } from \"../token\";\nimport Map from \"./Map\";\nimport PropertyListVisualizer from \"./PropertyListVisualizer\";\nimport \"./dashboard.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Responsible for rendering the dashboard shown to the user after authentication\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  // When the component first loads, fetch information\n  async componentDidMount() {\n    if (!token.val) {\n      return;\n    }\n\n    // Call the backend to get user account information\n    const res = await axios({\n      method: \"get\",\n      url: \"https://backend-426.herokuapp.com/api/user/accountInformation\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // If the call fails, redirect user to authenticate\n    if (res.data.error) {\n      window.location.href = \"../login\";\n    }\n\n    // Call backend to find properties to show on the map\n    const localProperties = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: res.data.data.location[0],\n        lon: res.data.data.location[1],\n        range: 500,\n      },\n    });\n\n    // If the call fails, redirect user to authenticate\n    if (res.data.error) {\n      window.location.href = \"../login\";\n    }\n\n    // Store both results in state\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      lat: res.data.data.location[0],\n      lon: res.data.data.location[1],\n      propertiesToShow: localProperties.data,\n    }));\n  }\n\n  // If the user requests to go to the account view page\n  changePage = () => {\n    // Update state so we render a Redirect tag\n    this.setState(() => ({\n      redirect: <Redirect to=\"/Earth3-Frontend/personal\"></Redirect>,\n    }));\n  };\n\n  // If the user requests to make a move on the map\n  makeMove = async (walkLat, walkLon) => {\n    // Immediately call backend\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/user/move\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: walkLat,\n        lon: walkLon,\n      },\n    });\n\n    // Get the new properties that are nearby the user\n    const localProperties = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: walkLat,\n        lon: walkLon,\n        range: 500,\n      },\n    });\n\n    // Update state accordingly\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      lat: res.data.data.lat,\n      lon: res.data.data.lon,\n      propertiesToShow: localProperties.data,\n    }));\n\n    // Inform the walk offer component that the move succeeded\n    return true;\n  };\n\n  // Handler if the user requests to buy a certain tier of a property\n  makePurchase = async (id, tier) => {\n    // Defer to backend\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/buy\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        propertyId: id,\n        tier: tier,\n      },\n    });\n\n    // Refresh property information\n    const localProperties = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: this.state.lat,\n        lon: this.state.lon,\n        range: 500,\n      },\n    });\n\n    // Handle results and possible error\n    if (res.data.error) {\n      this.setState(() => ({\n        propertiesToShow: localProperties.data,\n      }));\n    } else {\n      this.setState(() => ({\n        balance: res.data.data.user.balance,\n        propertiesToShow: localProperties.data,\n      }));\n    }\n  };\n\n  // Helper for turning big int into dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"\";\n    }\n    x = parseFloat(x.toFixed(2));\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    // Validate token\n    if (!token.val) {\n      return <Redirect to=\"/Earth3-Frontend/login\"></Redirect>;\n    }\n\n    let vals = this.state.propertiesToShow;\n\n    return (\n      <div className=\"cw\">\n        {this.state.redirect}\n        {this.state.goToLeaderboard}\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={this.changePage}>Go to Account View</button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={() => {\n            this.setState(() => ({\n              goToLeaderboard: (\n                <Redirect to=\"/Earth3-Frontend/leaderboard\"></Redirect>\n              ),\n            }));\n          }}\n        >\n          Go to Leaderboard\n        </button>\n        <hr />\n        <p className=\"cn\">\n          <strong className=\"ll cn\">Balance:  {this.numberWithCommas(this.state.balance)}\n          </strong>\n        </p>\n        <div className=\"map ct\">\n          <Map\n            userLat={this.state.lat}\n            userLon={this.state.lon}\n            properties={this.state.propertiesToShow}\n            userBalance={this.state.balance}\n            moveHandler={this.makeMove.bind(this)}\n            focusHandler={this.makePurchase.bind(this)}\n          />\n        </div>\n        <div>\n          <hr />\n          <h3 className=\"ct\">\n            {this.state.propertiesToShow\n              ? `Showing ${this.state.propertiesToShow.length} properties`\n              : \"Showing no properties\"}\n          </h3>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark btn-rounded ml mt tbutton \"\n            data-mdb-ripple-color=\"dark\"\n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.value > b.value ? 1 : -1;\n                }),\n              }));\n            }}\n          >\n            Sort by Value Ascending\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n            data-mdb-ripple-color=\"dark\"\n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.value > b.value ? -1 : 1;\n                }),\n              }));\n            }}\n          >\n            Sort by Value Descending\n          </button>\n          <br />\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n            data-mdb-ripple-color=\"dark\"\n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.hourlyIncome > b.hourlyIncome ? 1 : -1;\n                }),\n              }));\n            }}\n          >\n            Sort by Income Ascending\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n            data-mdb-ripple-color=\"dark\"\n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.hourlyIncome > b.hourlyIncome ? -1 : 1;\n                }),\n              }));\n            }}\n          >\n            Sort by Income Descending\n          </button>\n          <br />\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n            data-mdb-ripple-color=\"dark\"\n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.level > b.level ? 1 : -1;\n                }),\n              }));\n            }}\n          >\n            Sort by Level Ascending\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark btn-rounded ml mt tbutton\"\n            data-mdb-ripple-color=\"dark\"\n            onClick={() => {\n              this.setState((prevState) => ({\n                propertiesToShow: prevState.propertiesToShow.sort((a, b) => {\n                  return a.level > b.level ? -1 : 1;\n                }),\n              }));\n            }}\n          >\n            Sort by Level Descending\n          </button>\n          <div align=\"center\">\n            <PropertyListVisualizer\n              items={vals}\n              balance={this.state.balance}\n              handler={this.makePurchase.bind(this)}\n              key={this.state.propertiesToShow}\n              id={vals}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import axios from \"axios\";\nimport React from \"react\";\nimport { token } from \"../token\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./leaderboard.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Responsible for showing the leaderboard of the top 10 players, ranked by lifetime earnings\nclass Leaderboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // State for handling redirect requests\n    this.state = {\n      redirectAccountView: false,\n      redirectDashboard: false,\n    };\n  }\n\n  // Helper for turning big int into dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"\";\n    }\n    x = parseFloat(x.toFixed(2));\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  // When the component is first loaded, get the leaderboard information\n  async componentDidMount() {\n    // Make sure we have a valid token\n    if (!token.val) {\n      return;\n    }\n\n    // Call the backend to get user account information\n    const res = await axios({\n      method: \"get\",\n      url: \"https://backend-426.herokuapp.com/api/user/leaderboard\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // If there was an error, inform the user and abort\n    if (res.data.error) {\n      alert(\"Unable to access leaderboard\");\n      return;\n    }\n\n    // If we succeed, store data in state\n    this.setState(() => ({\n      people: res.data.data,\n    }));\n  }\n\n  render() {\n    // Handle the case where the user clicks the account view button\n    if (this.state.redirectAccountView) {\n      return <Redirect to=\"/Earth3-Frontend/personal\"></Redirect>;\n    }\n\n    // Handle the case where the user clicks the dashboard view button\n    if (this.state.redirectDashboard) {\n      return <Redirect to=\"/Earth3-Frontend/dashboard\"></Redirect>;\n    }\n\n    return (\n      <div className=\"pad\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={() => {\n            this.setState(() => ({ redirectDashboard: true }));\n          }}\n        >\n          Dashboard\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark btn-rounded ml mt tbuttons\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={() => {\n            this.setState(() => ({ redirectAccountView: true }));\n          }}\n        >\n          Account View\n        </button>\n        <hr />\n        <h1 className=\"lt\">Leaderboard</h1>\n        <ol className=\"list\">\n          {this.state.people\n            ? this.state.people.map((p) => {\n              return (\n                <div className='card c2 ct'>\n                  <li className=\"ct hc\" key={p.name + p.experience}>\n                    <hr className=\"hr50\" />\n                    <h3 className=\"hc\">{p.name}</h3>\n                    <br />\n                    <strong>Properties Owned:</strong> {p.numProperties}\n                    <br />\n                    <strong>Lifetime Earnings:</strong>{\" \"}\n                    {this.numberWithCommas(p.experience)}\n                  </li>\n                </div>\n              );\n            })\n            : \"Loading...\"}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default Leaderboard;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./homepage.css\"\n\nclass Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: null,\n      numPlayers: 0,\n      numProperties: 0,\n      totalEarnings: 0,\n    };\n  }\n\n  async componentDidMount() {\n    // Call the backend to get user account information\n    const res = await axios({\n        method: \"get\",\n        url: \"https://backend-426.herokuapp.com/api/stats\",\n    });\n    if (res.status !== 200) {\n        return;\n    }\n\n    this.setState(() => ({\n        numPlayers: res.data.numUsers,\n        numProperties: res.data.numProperties,\n        totalEarnings: res.data.totalEarnings,\n    }));\n  }\n\n  // Helper for turning big int into dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"\";\n    }\n    x = parseFloat(x.toFixed(2));\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return this.state.redirect;\n    }\n    return (\n      <div className=\"home im\">\n        <h1 className=\"display-3 gameT\">Earth 3.0</h1>\n        <div>\n          <h3 className=\"font\">Scroll Down to See How to Play</h3>\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-dark btn-rounded loginregister\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={() => {\n            this.setState(() => ({\n              redirect: (\n                <Redirect to=\"/Earth3-Frontend/login\"></Redirect>\n              ),\n            }));\n          }}\n        >\n          Login\n                </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-dark btn-rounded loginregister\"\n          data-mdb-ripple-color=\"dark\"\n          onClick={() => {\n            this.setState(() => ({\n              redirect: (\n                <Redirect to=\"/Earth3-Frontend/register\"></Redirect>\n              ),\n            }));\n          }}\n        >\n          Register\n                </button>\n        <div className=\"bottom\">\n          <h3>Active Players: {this.state.numPlayers}</h3>\n          <h3>Total Properties: {this.state.numProperties}</h3>\n          <h3>Total Revenue Generated: {this.numberWithCommas(this.state.totalEarnings)}</h3>\n        </div>\n        <div className=\"htpt pad\">\n          <h1>How it works:</h1>\n\t\t\t<ul>\n\t\t\t\t<li>\tYou are a real player on a map and you have a balance</li>\n          <li>When you create an account, your player starts in Chapel Hill, NC.</li>\n          <li>You can walk around by clicking on the map walking on the map costs money.</li>\n          <li>You can see all the properties that are within 500 meters of you Each property has 5 tiers</li>\n          <li>Each tier costs propertyValue^tier</li>\n          <li>Each tier earns you baseIncome^tier</li>\n          <li>Your properties pay out every minute, your balance is automatically changed.</li>\n          <li>\tBy default you can only own 5 total properties (any number of tiers in a property is not limited)</li>\n          <li>You can increase the amount of properties you may have on the account view page</li>\n          <li>Cost of additional property spaces: (current maximum number of properties)  ^ 3 </li>\n          <li>You can also increase your per minute payout by upgrading your multiplier</li>\n          <li>Each 1,000,000 spent on increasing multiplier will increase per minute payout by 1%</li>\n          <li>Cost for multiplier is constant (1M = 1%) and doesn't increase.</li>\n          <li>User can sell properties if constrained by their current maximum property limit</li>\n          <li>User will not earn money for selling properties, they simply lose ownership There are over 10,000 properties.</li>\n          <li>We have added a property corresponding to every major American city</li>\n          <li>We have also added properties corresponding to many buildings on UNC's campus </li>\n\t\t\t</ul>\n          <h1>What we Used:</h1>\n          <p>\tHeroku : Hosting backend</p>\n          <p>Github Pages: Hosting Frontend</p>\n          <p>\tNode.JS + Express.JS + Mongoose: Implementing Backend</p>\n          <p>\tMongoDB: Storing Backend Information</p>\n          <p>\tReact + Axios + Google Maps API: Implementing Frontend</p>\n          <p>Bootstrap and CSS: General Styling</p>\n          <p>https://opencagedata.com: Decoding Coordinates to Addresses</p>\n\n        </div>\n\n\n\n\n      </div>\n\n    );\n  }\n}\nexport default Homepage;\n","// React Imports\nimport React from \"react\"; \nimport { Route, Switch } from \"react-router-dom\";\n\n// Component Imports\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport AccountInfoView from \"./components/AccountInfoView\";\nimport Dashboard from \"./components/Dashboard\";\nimport Leaderboard from \"./components/Leaderboard\";\nimport Homepage from \"./components/Homepage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//import Jumbotron from 'react-bootstrap/Jumbotron'\n\n\nfunction App() {\n    return (\n      <Switch>\n        <Route exact path=\"/Earth3-Frontend/\">\n          <Homepage /> \n        </Route>\n        <Route path=\"/Earth3-Frontend/login\">\n          <Login />\n        </Route>\n        <Route path=\"/Earth3-Frontend/register\">\n          <Register />\n        </Route>\n        <Route path=\"/Earth3-Frontend/personal\">\n          <AccountInfoView />\n        </Route>\n        <Route path=\"/Earth3-Frontend/dashboard\">\n          <Dashboard />\n        </Route>\n        <Route path=\"/Earth3-Frontend/leaderboard\">\n          <Leaderboard />\n        </Route>\n      </Switch>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
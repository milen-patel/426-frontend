{"version":3,"sources":["components/Register.js","token.js","components/Login.js","components/PropertyOwnershipList.js","components/AccountInfoView.js","components/PropertyOnMap.js","components/UserOnMap.js","components/Map.js","components/PropertyListVisualizer.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Register","nameFieldChanged","e","setState","nameField","target","value","emailFieldChanged","emailField","passwordFieldChanged","passField","onRegister","a","axios","method","url","headers","data","name","state","email","password","status","to","toString","this","type","onChange","onClick","React","Component","token","val","Login","onLogin","res","PropertyOwnershipList","props","items","processed","map","hourlyIncome","level","ownerEmailT1","ownerEmailT2","ownerEmailT3","ownerEmailT4","ownerEmailT5","_id","AccountInfoView","onUpgrade","balance","maxProperties","alert","error","validateToken","onRedirectRequest","redirect","window","location","href","created","accountCreatedDate","experience","numProperties","properties","length","x","replace","numberWithCommas","PropertyOnMap","$hover","UserOnMap","Map","onAddressLookup","lat","lon","console","log","clickedMap","walkCost","distanceInmBetweenEarthCoordinates","userLat","userLon","lng","walkLat","walkLon","shouldShowWalkOffer","degreesToRadians","degrees","Math","PI","walkOffer","propertyVisuals","userBalance","moveHandler","style","width","height","bootstrapURLKeys","key","process","language","region","center","defaultZoom","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","sqrt","PropertyListVisualizer","id","tier","cost","handler","generateBuyButton","generateEntries","Dashboard","changePage","makeMove","range","localProperties","propertiesToShow","makePurchase","propertyId","user","bind","App","history","useHistory","exact","path","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6314291.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      nameField: \"\",\n      passField: \"\",\n      emailField: \"\",\n      status: \"\",\n    };\n  }\n\n  nameFieldChanged = (e) => {\n    this.setState(() => ({\n      nameField: e.target.value,\n    }));\n  };\n\n  emailFieldChanged = (e) => {\n    this.setState(() => ({\n      emailField: e.target.value,\n    }));\n  };\n\n  passwordFieldChanged = (e) => {\n    this.setState(() => ({\n      passField: e.target.value,\n    }));\n  };\n\n  onRegister = async () => {\n    //CASEY validate input\n    try {\n      await axios({\n        method: \"post\",\n        url: \"https://backend-426.herokuapp.com/api/users/register\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        data: {\n          name: this.state.nameField,\n          email: this.state.emailField,\n          password: this.state.passField,\n        },\n      });\n      this.setState(() => ({\n        status: <Redirect to=\"/426-frontend/login\"></Redirect>,\n      }));\n    } catch (err) {\n      this.setState(() => ({ status: err.toString() }));\n    }\n  };\n\n  render() {\n    //CASEY: Display field requirements\n    return (\n      <div>\n        {this.state.status}\n        {this.state.status ? <br /> : \"\"}\n        Name:\n        <input type=\"text\" onChange={this.nameFieldChanged}></input>\n        <br />\n        Email:\n        <input type=\"text\" onChange={this.emailFieldChanged}></input>\n        <br />\n        Password:\n        <input type=\"password\" onChange={this.passwordFieldChanged}></input>\n        <br />\n        Register:\n        <button type=\"button\" onClick={this.onRegister}>\n          Register\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","/*\n * Used to store JWT token for authentication purposes \n */\n\nlet token = {\n    val: \"\",\n};\nexport {token};\n","import axios from \"axios\";\nimport React from \"react\";\nimport { token } from \"../token\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      passField: \"\",\n      emailField: \"\",\n      status: \"\",\n    };\n  }\n\n  emailFieldChanged = (e) => {\n    this.setState(() => ({\n      emailField: e.target.value,\n    }));\n  };\n\n  passwordFieldChanged = (e) => {\n    this.setState(() => ({\n      passField: e.target.value,\n    }));\n  };\n\n  onLogin = async () => {\n    //MILEN fix double login broken bug\n    //CASEY validate input\n    try {\n      let res = await axios({\n        method: \"post\",\n        url: \"https://backend-426.herokuapp.com/api/users/login\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        data: {\n          email: this.state.emailField,\n          password: this.state.passField,\n        },\n      });\n      token.val = res.data.data.token;\n      this.setState(() => ({\n        status: <Redirect to=\"/426-frontend/dashboard\"></Redirect>,\n      }));\n    } catch (err) {\n      this.setState(() => ({ status: err.toString() }));\n    }\n  };\n\n  render() {\n    //CASEY: Display field requirements\n    return (\n      <div>\n        {this.state.status}\n        {this.state.status ? <br /> : \"\"}\n        Email:\n        <input type=\"text\" onChange={this.emailFieldChanged}></input>\n        <br />\n        Password:\n        <input type=\"password\" onChange={this.passwordFieldChanged}></input>\n        <br />\n        Login:\n        <button type=\"button\" onClick={this.onLogin}>\n          Login\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","function PropertyOwnershipList(props) {\n  if (!props.items) {\n    return <h1>Buy Properties to Get Started...</h1>;\n  }\n\n  let processed = \"\";\n\n  processed = props.items.map((e) => {\n    return (\n        <div key={e._id}>\n            <hr />\n          <h1>{e.name}</h1>\n          <h5>Hourly Income: {e.hourlyIncome}</h5>\n          <h5>Base Value: {e.value}</h5>\n          <h5>Level:{e.level} </h5>\n          <h5>Owners:</h5>\n          <ul>\n              <li>Tier 1: {e.ownerEmailT1 ? e.ownerEmailT1 : <em>Unowned</em>}</li>\n              <li>Tier 2: {e.ownerEmailT2 ? e.ownerEmailT2 : <em>Unowned</em>}</li>\n              <li>Tier 3: {e.ownerEmailT3 ? e.ownerEmailT3 : <em>Unowned</em>}</li>\n              <li>Tier 4: {e.ownerEmailT4 ? e.ownerEmailT4 : <em>Unowned</em>}</li>\n              <li>Tier 5: {e.ownerEmailT5 ? e.ownerEmailT5 : <em>Unowned</em>}</li>\n          </ul>\n          <hr />\n        </div>\n    )\n  });\n\n  return <div>{processed}</div>;\n}\n\nexport default PropertyOwnershipList;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { token } from \"../token\";\nimport axios from \"axios\";\nimport PropertyOwnershipList from \"./PropertyOwnershipList\";\n\n// Response for loading the personal account information pages\nclass AccountInfoView extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  // First time the component is rendered, go get data\n  async componentDidMount() {\n    // Validate that the user has authenticated\n    if (!token.val) {\n      return;\n    }\n\n    // Call backend for account information\n    const res = await axios({\n      method: \"get\",\n      url: \"https://backend-426.herokuapp.com/api/user/accountInformation\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // If the call fails, redirect the user\n    if (res.data.error) {\n      window.location.href = \"../login\";\n    }\n\n    // Set the state based on the result of the call\n    this.setState(() => ({\n      email: res.data.data.email,\n      name: res.data.data.name,\n      created: res.data.data.accountCreatedDate,\n      balance: res.data.data.balance,\n      maxProperties: res.data.data.maxProperties,\n      experience: res.data.data.experience,\n      location: res.data.data.location,\n      numProperties: res.data.data.properties.length,\n      properties: res.data.properties,\n    }));\n  }\n\n  // Handler for if the user requests to upgrade their property limit\n  onUpgrade = async () => {\n    // Make sure that they have enough money\n    if (this.state.balance <= this.state.maxProperties ** 3) {\n      alert(\"You don't have enough money for this transaction!\");\n      return;\n    }\n\n    // Call API for upgrading\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/user/buyLevel\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // Abort if error\n    if (res.data.error) {\n      alert(\"Unable to upgrade!\");\n      return;\n    }\n\n    // Update state after API Call\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      maxProperties: res.data.data.maxProperties,\n    }));\n  };\n\n  validateToken = () => {\n    return true;\n  };\n\n  // Handler for if the user wants to go back to the dashboard\n  onRedirectRequest = () => {\n    // Update state so we render a <Redirect> tag\n    this.setState(() => ({\n      redirect: true,\n    }));\n  };\n\n  // Helper function for converting big integers into dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"\";\n    }\n    return \"$\" + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    // Validate token\n    if (!token.val || !this.validateToken()) {\n      return <Redirect to=\"/426-frontend/login\"></Redirect>;\n    }\n\n    // If the user has requested to go back to the dashboard\n    if (this.state.redirect) {\n      return <Redirect to=\"/426-frontend/dashboard\"></Redirect>;\n    }\n\n    return (\n      <div>\n        <p>Welcome</p>\n        <button onClick={this.onRedirectRequest}>Go Back to Dashboard</button>\n        <button>Go to Leaderboard</button>\n        <hr />\n        <h1>Account Information:</h1>\n        <ul>\n          <li>\n            <strong>Email: </strong>\n            {this.state.email}\n          </li>\n          <li>\n            <strong>Name: </strong>\n            {this.state.name}\n          </li>\n          <li>\n            <strong>Account Created On: </strong>\n            {this.state.created}\n          </li>\n          <li>\n            <strong>Balance: </strong>\n            {this.numberWithCommas(this.state.balance)}\n          </li>\n          <li>\n            <strong>Maximum Properties: </strong>\n            {this.state.maxProperties}\n          </li>\n          <li>\n            <strong>Experience: </strong>\n            {this.state.experience}\n          </li>\n          <li>\n            <strong>Latitude: </strong>\n            {this.state.location ? this.state.location[0] : \"\"}\n          </li>\n          <li>\n            <strong>Longitude: </strong>\n            {this.state.location ? this.state.location[1] : \"\"}\n          </li>\n          <li>\n            <strong>Number of Properties: </strong>\n            {this.state.numProperties}\n          </li>\n        </ul>\n        <hr />\n        <h1>Upgrades</h1>\n        <p>\n          You can currently own up to {this.state.maxProperties} properties and\n          you currently own {this.state.numProperties}. You can upgrade to{\" \"}\n          {2 * this.state.maxProperties} slots for{\" \"}\n          {this.numberWithCommas(this.state.maxProperties ** 3)}\n        </p>\n        {this.state.balance >= this.state.maxProperties ** 3 ? (\n          <button onClick={this.onUpgrade}>Upgrade</button>\n        ) : (\n          <button>Not enough funds!</button>\n        )}\n        <hr />\n        <h1>Your Properties:</h1>\n        <PropertyOwnershipList items={this.state.properties} />\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default AccountInfoView;\n","  let PropertyOnMap = (props) => {\n    return (\n      <div key ={props.name}>\n        <button>\n        {props.$hover ?props.name :\"*\"}\n        </button>\n      </div>\n    );\n  };\n\n  export default PropertyOnMap;","  function UserOnMap (props) {\n    return (\n      <div>\n        <button>{props.name}</button>\n      </div>\n    );\n  };\n\n  export default UserOnMap;","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport PropertyOnMap from \"./PropertyOnMap\";\nimport UserOnMap from \"./UserOnMap\";\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldShowWalkOffer: false,\n    };\n  }\n\n  onAddressLookup = (lat, lon) => {\n    console.log(lat, lon);\n  }\n\n  clickedMap = (e) => {\n    const walkCost = this.distanceInmBetweenEarthCoordinates(\n      this.props.userLat,\n      this.props.userLon,\n      e.lat,\n      e.lng\n    );\n    this.setState(() => ({\n      walkLat: e.lat,\n      walkLon: e.lng,\n      walkCost: walkCost,\n      shouldShowWalkOffer: true,\n    }));\n  };\n\n  render() {\n    let walkOffer;\n    if (this.state.shouldShowWalkOffer) {\n      walkOffer = (\n        <div>\n          <hr />\n          Lat: {this.state.walkLat}\n          <br />\n          Lon: {this.state.walkLon}\n          <br />\n          Cost: {this.state.walkCost}\n          <br />\n          {this.props.userBalance > this.state.walkCost ? (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.props.moveHandler(this.state.walkLat, this.state.walkLon);\n              }}\n            >\n              Move\n            </button>\n          ) : (\n            <button type=\"button\">Insufficient Funds</button>\n          )}\n          <hr />\n        </div>\n      );\n    }\n\n    let propertyVisuals;\n    if (this.props.properties) {\n      propertyVisuals = this.props.properties.map((e) => (\n        <PropertyOnMap\n          location={e.location}\n          name={e.name}\n          lat={e.location[0]}\n          lng={e.location[1]}\n          key={e.location[0]+\"\"+e.location[1]}\n        />\n      ));\n    }\n\n    return (\n      <div>\n        {walkOffer}\n        <div style={{ width: \"500px\", height: \"500px\" }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n              language: \"en\",\n              region: \"US\",\n            }}\n            center={{ lat: this.props.userLat, lng: this.props.userLon }}\n            defaultZoom={15}\n            onClick={this.clickedMap}\n          >\n            {propertyVisuals}\n            <UserOnMap\n              lat={this.props.userLat}\n              lng={this.props.userLon}\n              name={\"Me\"}\n            />\n          </GoogleMapReact>\n        </div>\n      </div>\n    );\n  }\n\n  degreesToRadians = (degrees) => {\n    return (degrees * Math.PI) / 180;\n  };\n\n  distanceInmBetweenEarthCoordinates(lat1, lon1, lat2, lon2) {\n    var earthRadiusKm = 6371;\n\n    var dLat = this.degreesToRadians(lat2 - lat1);\n    var dLon = this.degreesToRadians(lon2 - lon1);\n\n    lat1 = this.degreesToRadians(lat1);\n    lat2 = this.degreesToRadians(lat2);\n\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return 1000 * earthRadiusKm * c;\n  }\n}\n\nexport default Map;\n","import React from \"react\";\n\nclass PropertyListVisualizer extends React.Component {\n  generateBuyButton(id, tier, cost) {\n    if (cost > this.props.balance) {\n      return <button>Not enough $$$</button>;\n    }\n    return (\n      <button\n        onClick={() => {\n          this.props.handler(id, tier);\n        }}\n      >\n        Purchase for {`${this.numberWithCommas(cost)}`}\n      </button>\n    );\n  }\n\n  numberWithCommas(x) {\n    if (!x) {\n      return \"\";\n    }\n    return \"$\"+x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  generateEntries() {\n    if (!this.props.items || this.props.items.length === 0) {\n      return (\n        <div>\n          <h1>No nearby properties found...</h1>\n        </div>\n      );\n    }\n    \n\n    return this.props.items.map((e) => {\n      return (\n        <div key={e._id}>\n          <h1>{e.name}</h1>\n          <h5>Hourly Income: {e.hourlyIncome}</h5>\n          <h5>Base Value: {e.value}</h5>\n          <h5>Level:{e.level} </h5>\n          <h5>Owners:</h5>\n          <ul>\n            <li>\n              Tier 1:{\" \"}\n              {e.ownerEmailT1\n                ? e.ownerEmailT1\n                : this.generateBuyButton(e._id, 1, e.value ** 1)}\n            </li>\n            <li>\n              Tier 2:{\" \"}\n              {e.ownerEmailT2\n                ? e.ownerEmailT2\n                : this.generateBuyButton(e._id, 2, e.value ** 2)}\n            </li>\n            <li>\n              Tier 3:{\" \"}\n              {e.ownerEmailT3\n                ? e.ownerEmailT3\n                : this.generateBuyButton(e._id, 3, e.value ** 3)}\n            </li>\n            <li>\n              Tier 4:{\" \"}\n              {e.ownerEmailT4\n                ? e.ownerEmailT4\n                : this.generateBuyButton(e._id, 4, e.value ** 4)}\n            </li>\n            <li>\n              Tier 5:{\" \"}\n              {e.ownerEmailT5\n                ? e.ownerEmailT5\n                : this.generateBuyButton(e._id, 5, e.value ** 5)}\n            </li>\n          </ul>\n          <hr />\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div>{this.generateEntries()}</div>;\n  }\n}\n\nexport default PropertyListVisualizer;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { token } from \"../token\";\nimport Map from \"./Map\";\nimport PropertyListVisualizer from \"./PropertyListVisualizer\";\n\n// Responsible for rendering the dashboard shown to the user after authentication\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  // When the component first loads, fetch information\n  async componentDidMount() {\n    if (!token.val || !this.validateToken()) {\n      return;\n    }\n\n    // Call the backend to get user account information\n    const res = await axios({\n      method: \"get\",\n      url: \"https://backend-426.herokuapp.com/api/user/accountInformation\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n    });\n\n    // If the call fails, redirect user to authenticate\n    if (res.data.error) {\n      window.location.href = \"../login\";\n    }\n\n    // Call backend to find properties to show on the map\n    const localProperties = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: res.data.data.location[0],\n        lon: res.data.data.location[1],\n        range: 500,\n      },\n    });\n\n    // If the call fails, redirect user to authenticate\n    if (res.data.error) {\n      window.location.href = \"../login\";\n    }\n\n    // Store both results in state\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      lat: res.data.data.location[0],\n      lon: res.data.data.location[1],\n      propertiesToShow: localProperties.data,\n    }));\n  }\n\n  validateToken = () => {\n    return true;\n  };\n\n  // If the user requests to go to the account view page\n  changePage = () => {\n    // Update state so we render a Redirect tag\n    this.setState(() => ({\n      redirect: <Redirect to=\"/426-frontend/personal\"></Redirect>,\n    }));\n  }\n\n  // If the user requests to make a move on the map\n  makeMove = async (walkLat, walkLon) => {\n    // Immediately call backend\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/user/move\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: walkLat,\n        lon: walkLon,\n      },\n    });\n\n    // Get the new properties that are nearby the user\n    const localProperties = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: walkLat,\n        lon: walkLon,\n        range: 500,\n      },\n    });\n\n    // Update state accordingly\n    this.setState(() => ({\n      balance: res.data.data.balance,\n      lat: res.data.data.lat,\n      lon: res.data.data.lon,\n      propertiesToShow: localProperties.data,\n    }));\n  };\n\n  // Handler if the user requests to buy a certain tier of a property\n  makePurchase = async (id, tier) => {\n    // Defer to backend\n    const res = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/buy\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        propertyId: id,\n        tier: tier,\n      },\n    });\n\n    // Refresh property information\n    const localProperties = await axios({\n      method: \"post\",\n      url: \"https://backend-426.herokuapp.com/api/property/nearbyProperties\",\n      headers: {\n        \"auth-token\": token.val,\n      },\n      data: {\n        lat: this.state.lat,\n        lon: this.state.lon,\n        range: 500,\n      },\n    });\n\n\n    // Handle results and possible error\n    if (res.data.error) {\n      this.setState(() => ({\n        propertiesToShow: localProperties.data,\n      }));\n    } else {\n      this.setState(() => ({\n        balance: res.data.data.user.balance,\n        propertiesToShow: localProperties.data,\n      }));\n    }\n  };\n\n  // Helper for turning big int into dollar readable format\n  numberWithCommas(x) {\n    if (!x) {\n      return \"\";\n    }\n    return \"$\"+x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    // Validate token\n    if (!token.val || !this.validateToken()) {\n      return <Redirect to=\"/426-frontend/login\"></Redirect>;\n    }\n\n    return (\n      <div>\n        <p>welcome</p>\n        {this.state.redirect}\n        <button onClick={this.changePage}>\n          Go to Account View\n        </button>\n        <p>\n          <strong>Balance:</strong>\n          {this.numberWithCommas(this.state.balance)}\n        </p>\n        <Map\n          userLat={this.state.lat}\n          userLon={this.state.lon}\n          properties={this.state.propertiesToShow}\n          userBalance={this.state.balance}\n          moveHandler={this.makeMove.bind(this)}\n        />\n        <div>\n          <hr />\n          <PropertyListVisualizer\n            items={this.state.propertiesToShow}\n            balance={this.state.balance}\n            handler={this.makePurchase}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","// React Imports\nimport React from \"react\"; \nimport { Route, Switch } from \"react-router-dom\";\nimport { useHistory } from \"react-router\"\n\n// Component Imports\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport AccountInfoView from \"./components/AccountInfoView\";\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  // Hook for changing browser destination\n  let history = useHistory();\n\n    return (\n      <Switch>\n        <Route exact path=\"/426-frontend/\">\n          <p>Homepage</p>\n          <button onClick={() => {\n            history.push(\"/426-frontend/login\")\n          }}>Move to Login</button>\n          <button onClick={() => {\n            history.push(\"/426-frontend/register\")\n          }}>Move to Register</button>\n        </Route>\n        <Route path=\"/426-frontend/login\">\n          <Login />\n        </Route>\n        <Route path=\"/426-frontend/register\">\n          <Register />\n        </Route>\n        <Route path=\"/426-frontend/personal\">\n          <AccountInfoView />\n        </Route>\n        <Route path=\"/426-frontend/dashboard\">\n          <Dashboard />\n        </Route>\n      </Switch>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}